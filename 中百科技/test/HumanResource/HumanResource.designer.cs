#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DasherStation.HumanResource
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="DasherStation3")]
	public partial class HumanResourceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPayrollAdd(PayrollAdd instance);
    partial void UpdatePayrollAdd(PayrollAdd instance);
    partial void DeletePayrollAdd(PayrollAdd instance);
    partial void InsertPayOffDetail(PayOffDetail instance);
    partial void UpdatePayOffDetail(PayOffDetail instance);
    partial void DeletePayOffDetail(PayOffDetail instance);
    partial void InsertSalaryItemTemplet(SalaryItemTemplet instance);
    partial void UpdateSalaryItemTemplet(SalaryItemTemplet instance);
    partial void DeleteSalaryItemTemplet(SalaryItemTemplet instance);
    partial void InsertPersonnelInfo(PersonnelInfo instance);
    partial void UpdatePersonnelInfo(PersonnelInfo instance);
    partial void DeletePersonnelInfo(PersonnelInfo instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    partial void InsertProduceTeam(ProduceTeam instance);
    partial void UpdateProduceTeam(ProduceTeam instance);
    partial void DeleteProduceTeam(ProduceTeam instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertPayOffGather(PayOffGather instance);
    partial void UpdatePayOffGather(PayOffGather instance);
    partial void DeletePayOffGather(PayOffGather instance);
    partial void InsertPayOffGather2(PayOffGather2 instance);
    partial void UpdatePayOffGather2(PayOffGather2 instance);
    partial void DeletePayOffGather2(PayOffGather2 instance);
    partial void InsertEquipmentInformation(EquipmentInformation instance);
    partial void UpdateEquipmentInformation(EquipmentInformation instance);
    partial void DeleteEquipmentInformation(EquipmentInformation instance);
    #endregion
		
		public HumanResourceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumanResourceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumanResourceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumanResourceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SalaryParameter> SalaryParameter
		{
			get
			{
				return this.GetTable<SalaryParameter>();
			}
		}
		
		public System.Data.Linq.Table<PayrollAdd> PayrollAdd
		{
			get
			{
				return this.GetTable<PayrollAdd>();
			}
		}
		
		public System.Data.Linq.Table<PayOffDetail> PayOffDetail
		{
			get
			{
				return this.GetTable<PayOffDetail>();
			}
		}
		
		public System.Data.Linq.Table<SalaryItemTemplet> SalaryItemTemplet
		{
			get
			{
				return this.GetTable<SalaryItemTemplet>();
			}
		}
		
		public System.Data.Linq.Table<PersonnelInfo> PersonnelInfo
		{
			get
			{
				return this.GetTable<PersonnelInfo>();
			}
		}
		
		public System.Data.Linq.Table<Position> Position
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
		
		public System.Data.Linq.Table<ProduceTeam> ProduceTeam
		{
			get
			{
				return this.GetTable<ProduceTeam>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<PayOffGather> PayOffGather
		{
			get
			{
				return this.GetTable<PayOffGather>();
			}
		}
		
		public System.Data.Linq.Table<PayOffGather2> PayOffGather2
		{
			get
			{
				return this.GetTable<PayOffGather2>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentInformation> EquipmentInformation
		{
			get
			{
				return this.GetTable<EquipmentInformation>();
			}
		}
	}
	
	[Table(Name="dbo.salaryParameter")]
	public partial class SalaryParameter
	{
		
		private System.Nullable<double> _salaryPercent;
		
		private System.Nullable<double> _endowmentInsurance;
		
		private System.Nullable<double> _medicare;
		
		private System.Nullable<double> _outOfWork;
		
		private System.Nullable<double> _injure;
		
		private System.Nullable<double> _procreate;
		
		private System.Nullable<double> _medicare2;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private System.Nullable<System.DateTime> _updateDate;
		
		private string _updateMan;
		
		private string _inputMan;
		
		private System.Nullable<double> _housingAccumulationFund;
		
		private System.Nullable<double> _taxBase;
		
		public SalaryParameter()
		{
		}
		
		[Column(Storage="_salaryPercent", DbType="Float")]
		public System.Nullable<double> salaryPercent
		{
			get
			{
				return this._salaryPercent;
			}
			set
			{
				if ((this._salaryPercent != value))
				{
					this._salaryPercent = value;
				}
			}
		}
		
		[Column(Storage="_endowmentInsurance", DbType="Float")]
		public System.Nullable<double> endowmentInsurance
		{
			get
			{
				return this._endowmentInsurance;
			}
			set
			{
				if ((this._endowmentInsurance != value))
				{
					this._endowmentInsurance = value;
				}
			}
		}
		
		[Column(Storage="_medicare", DbType="Float")]
		public System.Nullable<double> medicare
		{
			get
			{
				return this._medicare;
			}
			set
			{
				if ((this._medicare != value))
				{
					this._medicare = value;
				}
			}
		}
		
		[Column(Storage="_outOfWork", DbType="Float")]
		public System.Nullable<double> outOfWork
		{
			get
			{
				return this._outOfWork;
			}
			set
			{
				if ((this._outOfWork != value))
				{
					this._outOfWork = value;
				}
			}
		}
		
		[Column(Storage="_injure", DbType="Float")]
		public System.Nullable<double> injure
		{
			get
			{
				return this._injure;
			}
			set
			{
				if ((this._injure != value))
				{
					this._injure = value;
				}
			}
		}
		
		[Column(Storage="_procreate", DbType="Float")]
		public System.Nullable<double> procreate
		{
			get
			{
				return this._procreate;
			}
			set
			{
				if ((this._procreate != value))
				{
					this._procreate = value;
				}
			}
		}
		
		[Column(Storage="_medicare2", DbType="Float")]
		public System.Nullable<double> medicare2
		{
			get
			{
				return this._medicare2;
			}
			set
			{
				if ((this._medicare2 != value))
				{
					this._medicare2 = value;
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this._inputDate = value;
				}
			}
		}
		
		[Column(Storage="_updateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> updateDate
		{
			get
			{
				return this._updateDate;
			}
			set
			{
				if ((this._updateDate != value))
				{
					this._updateDate = value;
				}
			}
		}
		
		[Column(Storage="_updateMan", DbType="VarChar(50)")]
		public string updateMan
		{
			get
			{
				return this._updateMan;
			}
			set
			{
				if ((this._updateMan != value))
				{
					this._updateMan = value;
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this._inputMan = value;
				}
			}
		}
		
		[Column(Storage="_housingAccumulationFund", DbType="Float")]
		public System.Nullable<double> housingAccumulationFund
		{
			get
			{
				return this._housingAccumulationFund;
			}
			set
			{
				if ((this._housingAccumulationFund != value))
				{
					this._housingAccumulationFund = value;
				}
			}
		}
		
		[Column(Storage="_taxBase", DbType="Float")]
		public System.Nullable<double> taxBase
		{
			get
			{
				return this._taxBase;
			}
			set
			{
				if ((this._taxBase != value))
				{
					this._taxBase = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.payrollAdd")]
	public partial class PayrollAdd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _updateDate;
		
		private string _updateMan;
		
		private System.Nullable<long> _kind;
		
		private System.Nullable<bool> _minusPlace;
		
		private System.Nullable<bool> _mark;
		
		private System.Nullable<bool> _fixupMark;
		
		private EntitySet<PayOffDetail> _PayOffDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnupdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnupdateDateChanged();
    partial void OnupdateManChanging(string value);
    partial void OnupdateManChanged();
    partial void OnkindChanging(System.Nullable<long> value);
    partial void OnkindChanged();
    partial void OnminusPlaceChanging(System.Nullable<bool> value);
    partial void OnminusPlaceChanged();
    partial void OnmarkChanging(System.Nullable<bool> value);
    partial void OnmarkChanged();
    partial void OnfixupMarkChanging(System.Nullable<bool> value);
    partial void OnfixupMarkChanged();
    #endregion
		
		public PayrollAdd()
		{
			this._PayOffDetail = new EntitySet<PayOffDetail>(new Action<PayOffDetail>(this.attach_PayOffDetail), new Action<PayOffDetail>(this.detach_PayOffDetail));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Column(Storage="_updateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> updateDate
		{
			get
			{
				return this._updateDate;
			}
			set
			{
				if ((this._updateDate != value))
				{
					this.OnupdateDateChanging(value);
					this.SendPropertyChanging();
					this._updateDate = value;
					this.SendPropertyChanged("updateDate");
					this.OnupdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_updateMan", DbType="VarChar(50)")]
		public string updateMan
		{
			get
			{
				return this._updateMan;
			}
			set
			{
				if ((this._updateMan != value))
				{
					this.OnupdateManChanging(value);
					this.SendPropertyChanging();
					this._updateMan = value;
					this.SendPropertyChanged("updateMan");
					this.OnupdateManChanged();
				}
			}
		}
		
		[Column(Storage="_kind", DbType="BigInt")]
		public System.Nullable<long> kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[Column(Storage="_minusPlace", DbType="Bit")]
		public System.Nullable<bool> minusPlace
		{
			get
			{
				return this._minusPlace;
			}
			set
			{
				if ((this._minusPlace != value))
				{
					this.OnminusPlaceChanging(value);
					this.SendPropertyChanging();
					this._minusPlace = value;
					this.SendPropertyChanged("minusPlace");
					this.OnminusPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_mark", DbType="Bit")]
		public System.Nullable<bool> mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[Column(Storage="_fixupMark", DbType="Bit")]
		public System.Nullable<bool> fixupMark
		{
			get
			{
				return this._fixupMark;
			}
			set
			{
				if ((this._fixupMark != value))
				{
					this.OnfixupMarkChanging(value);
					this.SendPropertyChanging();
					this._fixupMark = value;
					this.SendPropertyChanged("fixupMark");
					this.OnfixupMarkChanged();
				}
			}
		}
		
		[Association(Name="PayrollAdd_PayOffDetail", Storage="_PayOffDetail", ThisKey="id", OtherKey="paid")]
		public EntitySet<PayOffDetail> PayOffDetail
		{
			get
			{
				return this._PayOffDetail;
			}
			set
			{
				this._PayOffDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayOffDetail(PayOffDetail entity)
		{
			this.SendPropertyChanging();
			entity.PayrollAdd = this;
		}
		
		private void detach_PayOffDetail(PayOffDetail entity)
		{
			this.SendPropertyChanging();
			entity.PayrollAdd = null;
		}
	}
	
	[Table(Name="dbo.payOffDetail")]
	public partial class PayOffDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _paid;
		
		private System.Nullable<long> _piId;
		
		private System.Nullable<decimal> _money;
		
		private System.Nullable<long> _month;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private EntityRef<PayrollAdd> _PayrollAdd;
		
		private EntityRef<PersonnelInfo> _PersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpaidChanging(System.Nullable<long> value);
    partial void OnpaidChanged();
    partial void OnpiIdChanging(System.Nullable<long> value);
    partial void OnpiIdChanged();
    partial void OnmoneyChanging(System.Nullable<decimal> value);
    partial void OnmoneyChanged();
    partial void OnmonthChanging(System.Nullable<long> value);
    partial void OnmonthChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    #endregion
		
		public PayOffDetail()
		{
			this._PayrollAdd = default(EntityRef<PayrollAdd>);
			this._PersonnelInfo = default(EntityRef<PersonnelInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_paid", DbType="BigInt")]
		public System.Nullable<long> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					if (this._PayrollAdd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[Column(Storage="_piId", DbType="BigInt")]
		public System.Nullable<long> piId
		{
			get
			{
				return this._piId;
			}
			set
			{
				if ((this._piId != value))
				{
					if (this._PersonnelInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpiIdChanging(value);
					this.SendPropertyChanging();
					this._piId = value;
					this.SendPropertyChanged("piId");
					this.OnpiIdChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Money")]
		public System.Nullable<decimal> money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_month", DbType="BigInt")]
		public System.Nullable<long> month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Association(Name="PayrollAdd_PayOffDetail", Storage="_PayrollAdd", ThisKey="paid", OtherKey="id", IsForeignKey=true)]
		public PayrollAdd PayrollAdd
		{
			get
			{
				return this._PayrollAdd.Entity;
			}
			set
			{
				PayrollAdd previousValue = this._PayrollAdd.Entity;
				if (((previousValue != value) 
							|| (this._PayrollAdd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayrollAdd.Entity = null;
						previousValue.PayOffDetail.Remove(this);
					}
					this._PayrollAdd.Entity = value;
					if ((value != null))
					{
						value.PayOffDetail.Add(this);
						this._paid = value.id;
					}
					else
					{
						this._paid = default(Nullable<long>);
					}
					this.SendPropertyChanged("PayrollAdd");
				}
			}
		}
		
		[Association(Name="PersonnelInfo_PayOffDetail", Storage="_PersonnelInfo", ThisKey="piId", OtherKey="id", IsForeignKey=true)]
		public PersonnelInfo PersonnelInfo
		{
			get
			{
				return this._PersonnelInfo.Entity;
			}
			set
			{
				PersonnelInfo previousValue = this._PersonnelInfo.Entity;
				if (((previousValue != value) 
							|| (this._PersonnelInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonnelInfo.Entity = null;
						previousValue.PayOffDetail.Remove(this);
					}
					this._PersonnelInfo.Entity = value;
					if ((value != null))
					{
						value.PayOffDetail.Add(this);
						this._piId = value.id;
					}
					else
					{
						this._piId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PersonnelInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.salaryItemTemplet")]
	public partial class SalaryItemTemplet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _item1;
		
		private string _item2;
		
		private string _item3;
		
		private string _item4;
		
		private string _item5;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private string _item6;
		
		private string _item7;
		
		private string _item8;
		
		private string _item9;
		
		private string _item10;
		
		private string _item11;
		
		private string _item12;
		
		private string _item13;
		
		private string _item14;
		
		private string _item15;
		
		private string _item16;
		
		private string _item17;
		
		private string _item18;
		
		private string _item19;
		
		private string _item20;
		
		private string _item21;
		
		private string _item22;
		
		private string _item23;
		
		private string _item24;
		
		private string _item25;
		
		private string _item26;
		
		private string _item27;
		
		private string _item28;
		
		private string _item29;
		
		private string _item30;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onitem1Changing(string value);
    partial void Onitem1Changed();
    partial void Onitem2Changing(string value);
    partial void Onitem2Changed();
    partial void Onitem3Changing(string value);
    partial void Onitem3Changed();
    partial void Onitem4Changing(string value);
    partial void Onitem4Changed();
    partial void Onitem5Changing(string value);
    partial void Onitem5Changed();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void Onitem6Changing(string value);
    partial void Onitem6Changed();
    partial void Onitem7Changing(string value);
    partial void Onitem7Changed();
    partial void Onitem8Changing(string value);
    partial void Onitem8Changed();
    partial void Onitem9Changing(string value);
    partial void Onitem9Changed();
    partial void Onitem10Changing(string value);
    partial void Onitem10Changed();
    partial void Onitem11Changing(string value);
    partial void Onitem11Changed();
    partial void Onitem12Changing(string value);
    partial void Onitem12Changed();
    partial void Onitem13Changing(string value);
    partial void Onitem13Changed();
    partial void Onitem14Changing(string value);
    partial void Onitem14Changed();
    partial void Onitem15Changing(string value);
    partial void Onitem15Changed();
    partial void Onitem16Changing(string value);
    partial void Onitem16Changed();
    partial void Onitem17Changing(string value);
    partial void Onitem17Changed();
    partial void Onitem18Changing(string value);
    partial void Onitem18Changed();
    partial void Onitem19Changing(string value);
    partial void Onitem19Changed();
    partial void Onitem20Changing(string value);
    partial void Onitem20Changed();
    partial void Onitem21Changing(string value);
    partial void Onitem21Changed();
    partial void Onitem22Changing(string value);
    partial void Onitem22Changed();
    partial void Onitem23Changing(string value);
    partial void Onitem23Changed();
    partial void Onitem24Changing(string value);
    partial void Onitem24Changed();
    partial void Onitem25Changing(string value);
    partial void Onitem25Changed();
    partial void Onitem26Changing(string value);
    partial void Onitem26Changed();
    partial void Onitem27Changing(string value);
    partial void Onitem27Changed();
    partial void Onitem28Changing(string value);
    partial void Onitem28Changed();
    partial void Onitem29Changing(string value);
    partial void Onitem29Changed();
    partial void Onitem30Changing(string value);
    partial void Onitem30Changed();
    #endregion
		
		public SalaryItemTemplet()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_item1", DbType="VarChar(50)")]
		public string item1
		{
			get
			{
				return this._item1;
			}
			set
			{
				if ((this._item1 != value))
				{
					this.Onitem1Changing(value);
					this.SendPropertyChanging();
					this._item1 = value;
					this.SendPropertyChanged("item1");
					this.Onitem1Changed();
				}
			}
		}
		
		[Column(Storage="_item2", DbType="VarChar(50)")]
		public string item2
		{
			get
			{
				return this._item2;
			}
			set
			{
				if ((this._item2 != value))
				{
					this.Onitem2Changing(value);
					this.SendPropertyChanging();
					this._item2 = value;
					this.SendPropertyChanged("item2");
					this.Onitem2Changed();
				}
			}
		}
		
		[Column(Storage="_item3", DbType="VarChar(50)")]
		public string item3
		{
			get
			{
				return this._item3;
			}
			set
			{
				if ((this._item3 != value))
				{
					this.Onitem3Changing(value);
					this.SendPropertyChanging();
					this._item3 = value;
					this.SendPropertyChanged("item3");
					this.Onitem3Changed();
				}
			}
		}
		
		[Column(Storage="_item4", DbType="VarChar(50)")]
		public string item4
		{
			get
			{
				return this._item4;
			}
			set
			{
				if ((this._item4 != value))
				{
					this.Onitem4Changing(value);
					this.SendPropertyChanging();
					this._item4 = value;
					this.SendPropertyChanged("item4");
					this.Onitem4Changed();
				}
			}
		}
		
		[Column(Storage="_item5", DbType="VarChar(50)")]
		public string item5
		{
			get
			{
				return this._item5;
			}
			set
			{
				if ((this._item5 != value))
				{
					this.Onitem5Changing(value);
					this.SendPropertyChanging();
					this._item5 = value;
					this.SendPropertyChanged("item5");
					this.Onitem5Changed();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_item6", DbType="VarChar(50)")]
		public string item6
		{
			get
			{
				return this._item6;
			}
			set
			{
				if ((this._item6 != value))
				{
					this.Onitem6Changing(value);
					this.SendPropertyChanging();
					this._item6 = value;
					this.SendPropertyChanged("item6");
					this.Onitem6Changed();
				}
			}
		}
		
		[Column(Storage="_item7", DbType="VarChar(50)")]
		public string item7
		{
			get
			{
				return this._item7;
			}
			set
			{
				if ((this._item7 != value))
				{
					this.Onitem7Changing(value);
					this.SendPropertyChanging();
					this._item7 = value;
					this.SendPropertyChanged("item7");
					this.Onitem7Changed();
				}
			}
		}
		
		[Column(Storage="_item8", DbType="VarChar(50)")]
		public string item8
		{
			get
			{
				return this._item8;
			}
			set
			{
				if ((this._item8 != value))
				{
					this.Onitem8Changing(value);
					this.SendPropertyChanging();
					this._item8 = value;
					this.SendPropertyChanged("item8");
					this.Onitem8Changed();
				}
			}
		}
		
		[Column(Storage="_item9", DbType="VarChar(50)")]
		public string item9
		{
			get
			{
				return this._item9;
			}
			set
			{
				if ((this._item9 != value))
				{
					this.Onitem9Changing(value);
					this.SendPropertyChanging();
					this._item9 = value;
					this.SendPropertyChanged("item9");
					this.Onitem9Changed();
				}
			}
		}
		
		[Column(Storage="_item10", DbType="VarChar(50)")]
		public string item10
		{
			get
			{
				return this._item10;
			}
			set
			{
				if ((this._item10 != value))
				{
					this.Onitem10Changing(value);
					this.SendPropertyChanging();
					this._item10 = value;
					this.SendPropertyChanged("item10");
					this.Onitem10Changed();
				}
			}
		}
		
		[Column(Storage="_item11", DbType="VarChar(50)")]
		public string item11
		{
			get
			{
				return this._item11;
			}
			set
			{
				if ((this._item11 != value))
				{
					this.Onitem11Changing(value);
					this.SendPropertyChanging();
					this._item11 = value;
					this.SendPropertyChanged("item11");
					this.Onitem11Changed();
				}
			}
		}
		
		[Column(Storage="_item12", DbType="VarChar(50)")]
		public string item12
		{
			get
			{
				return this._item12;
			}
			set
			{
				if ((this._item12 != value))
				{
					this.Onitem12Changing(value);
					this.SendPropertyChanging();
					this._item12 = value;
					this.SendPropertyChanged("item12");
					this.Onitem12Changed();
				}
			}
		}
		
		[Column(Storage="_item13", DbType="VarChar(50)")]
		public string item13
		{
			get
			{
				return this._item13;
			}
			set
			{
				if ((this._item13 != value))
				{
					this.Onitem13Changing(value);
					this.SendPropertyChanging();
					this._item13 = value;
					this.SendPropertyChanged("item13");
					this.Onitem13Changed();
				}
			}
		}
		
		[Column(Storage="_item14", DbType="VarChar(50)")]
		public string item14
		{
			get
			{
				return this._item14;
			}
			set
			{
				if ((this._item14 != value))
				{
					this.Onitem14Changing(value);
					this.SendPropertyChanging();
					this._item14 = value;
					this.SendPropertyChanged("item14");
					this.Onitem14Changed();
				}
			}
		}
		
		[Column(Storage="_item15", DbType="VarChar(50)")]
		public string item15
		{
			get
			{
				return this._item15;
			}
			set
			{
				if ((this._item15 != value))
				{
					this.Onitem15Changing(value);
					this.SendPropertyChanging();
					this._item15 = value;
					this.SendPropertyChanged("item15");
					this.Onitem15Changed();
				}
			}
		}
		
		[Column(Storage="_item16", DbType="VarChar(50)")]
		public string item16
		{
			get
			{
				return this._item16;
			}
			set
			{
				if ((this._item16 != value))
				{
					this.Onitem16Changing(value);
					this.SendPropertyChanging();
					this._item16 = value;
					this.SendPropertyChanged("item16");
					this.Onitem16Changed();
				}
			}
		}
		
		[Column(Storage="_item17", DbType="VarChar(50)")]
		public string item17
		{
			get
			{
				return this._item17;
			}
			set
			{
				if ((this._item17 != value))
				{
					this.Onitem17Changing(value);
					this.SendPropertyChanging();
					this._item17 = value;
					this.SendPropertyChanged("item17");
					this.Onitem17Changed();
				}
			}
		}
		
		[Column(Storage="_item18", DbType="VarChar(50)")]
		public string item18
		{
			get
			{
				return this._item18;
			}
			set
			{
				if ((this._item18 != value))
				{
					this.Onitem18Changing(value);
					this.SendPropertyChanging();
					this._item18 = value;
					this.SendPropertyChanged("item18");
					this.Onitem18Changed();
				}
			}
		}
		
		[Column(Storage="_item19", DbType="VarChar(50)")]
		public string item19
		{
			get
			{
				return this._item19;
			}
			set
			{
				if ((this._item19 != value))
				{
					this.Onitem19Changing(value);
					this.SendPropertyChanging();
					this._item19 = value;
					this.SendPropertyChanged("item19");
					this.Onitem19Changed();
				}
			}
		}
		
		[Column(Storage="_item20", DbType="VarChar(50)")]
		public string item20
		{
			get
			{
				return this._item20;
			}
			set
			{
				if ((this._item20 != value))
				{
					this.Onitem20Changing(value);
					this.SendPropertyChanging();
					this._item20 = value;
					this.SendPropertyChanged("item20");
					this.Onitem20Changed();
				}
			}
		}
		
		[Column(Storage="_item21", DbType="VarChar(50)")]
		public string item21
		{
			get
			{
				return this._item21;
			}
			set
			{
				if ((this._item21 != value))
				{
					this.Onitem21Changing(value);
					this.SendPropertyChanging();
					this._item21 = value;
					this.SendPropertyChanged("item21");
					this.Onitem21Changed();
				}
			}
		}
		
		[Column(Storage="_item22", DbType="VarChar(50)")]
		public string item22
		{
			get
			{
				return this._item22;
			}
			set
			{
				if ((this._item22 != value))
				{
					this.Onitem22Changing(value);
					this.SendPropertyChanging();
					this._item22 = value;
					this.SendPropertyChanged("item22");
					this.Onitem22Changed();
				}
			}
		}
		
		[Column(Storage="_item23", DbType="VarChar(50)")]
		public string item23
		{
			get
			{
				return this._item23;
			}
			set
			{
				if ((this._item23 != value))
				{
					this.Onitem23Changing(value);
					this.SendPropertyChanging();
					this._item23 = value;
					this.SendPropertyChanged("item23");
					this.Onitem23Changed();
				}
			}
		}
		
		[Column(Storage="_item24", DbType="VarChar(50)")]
		public string item24
		{
			get
			{
				return this._item24;
			}
			set
			{
				if ((this._item24 != value))
				{
					this.Onitem24Changing(value);
					this.SendPropertyChanging();
					this._item24 = value;
					this.SendPropertyChanged("item24");
					this.Onitem24Changed();
				}
			}
		}
		
		[Column(Storage="_item25", DbType="VarChar(50)")]
		public string item25
		{
			get
			{
				return this._item25;
			}
			set
			{
				if ((this._item25 != value))
				{
					this.Onitem25Changing(value);
					this.SendPropertyChanging();
					this._item25 = value;
					this.SendPropertyChanged("item25");
					this.Onitem25Changed();
				}
			}
		}
		
		[Column(Storage="_item26", DbType="VarChar(50)")]
		public string item26
		{
			get
			{
				return this._item26;
			}
			set
			{
				if ((this._item26 != value))
				{
					this.Onitem26Changing(value);
					this.SendPropertyChanging();
					this._item26 = value;
					this.SendPropertyChanged("item26");
					this.Onitem26Changed();
				}
			}
		}
		
		[Column(Storage="_item27", DbType="VarChar(50)")]
		public string item27
		{
			get
			{
				return this._item27;
			}
			set
			{
				if ((this._item27 != value))
				{
					this.Onitem27Changing(value);
					this.SendPropertyChanging();
					this._item27 = value;
					this.SendPropertyChanged("item27");
					this.Onitem27Changed();
				}
			}
		}
		
		[Column(Storage="_item28", DbType="VarChar(50)")]
		public string item28
		{
			get
			{
				return this._item28;
			}
			set
			{
				if ((this._item28 != value))
				{
					this.Onitem28Changing(value);
					this.SendPropertyChanging();
					this._item28 = value;
					this.SendPropertyChanged("item28");
					this.Onitem28Changed();
				}
			}
		}
		
		[Column(Storage="_item29", DbType="VarChar(50)")]
		public string item29
		{
			get
			{
				return this._item29;
			}
			set
			{
				if ((this._item29 != value))
				{
					this.Onitem29Changing(value);
					this.SendPropertyChanging();
					this._item29 = value;
					this.SendPropertyChanged("item29");
					this.Onitem29Changed();
				}
			}
		}
		
		[Column(Storage="_item30", DbType="VarChar(50)")]
		public string item30
		{
			get
			{
				return this._item30;
			}
			set
			{
				if ((this._item30 != value))
				{
					this.Onitem30Changing(value);
					this.SendPropertyChanging();
					this._item30 = value;
					this.SendPropertyChanged("item30");
					this.Onitem30Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.personnelInfo")]
	public partial class PersonnelInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _no;
		
		private string _judgeMarry;
		
		private string _politicalVisage;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _tiptopDegree;
		
		private string _specialty;
		
		private string _competencyCertificate;
		
		private string _IDCard;
		
		private string _contactMethod;
		
		private string _nationality;
		
		private string _contractNo;
		
		private string _address;
		
		private string _function;
		
		private System.Nullable<System.DateTime> _functionAssessDate;
		
		private string _nativePlace;
		
		private System.Nullable<long> _dId;
		
		private System.Nullable<System.DateTime> _startWorkDate;
		
		private string _salaryMethod;
		
		private string _resume;
		
		private string _hortationCastigate;
		
		private System.Nullable<System.DateTime> _dimissionDate;
		
		private string _dimissionReason;
		
		private System.Nullable<System.DateTime> _workDate;
		
		private string _remark;
		
		private string _name;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private System.Nullable<bool> _kind;
		
		private System.Nullable<long> _ptId;
		
		private System.Nullable<bool> _mark;
		
		private System.Nullable<decimal> _basicSalary;
		
		private System.Nullable<long> _pId;
		
		private EntitySet<PayOffDetail> _PayOffDetail;
		
		private EntitySet<PayOffGather> _PayOffGather;
		
		private EntityRef<Position> _Position;
		
		private EntityRef<ProduceTeam> _ProduceTeam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnoChanging(string value);
    partial void OnnoChanged();
    partial void OnjudgeMarryChanging(string value);
    partial void OnjudgeMarryChanged();
    partial void OnpoliticalVisageChanging(string value);
    partial void OnpoliticalVisageChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OntiptopDegreeChanging(string value);
    partial void OntiptopDegreeChanged();
    partial void OnspecialtyChanging(string value);
    partial void OnspecialtyChanged();
    partial void OncompetencyCertificateChanging(string value);
    partial void OncompetencyCertificateChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OncontactMethodChanging(string value);
    partial void OncontactMethodChanged();
    partial void OnnationalityChanging(string value);
    partial void OnnationalityChanged();
    partial void OncontractNoChanging(string value);
    partial void OncontractNoChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnfunctionChanging(string value);
    partial void OnfunctionChanged();
    partial void OnfunctionAssessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnfunctionAssessDateChanged();
    partial void OnnativePlaceChanging(string value);
    partial void OnnativePlaceChanged();
    partial void OndIdChanging(System.Nullable<long> value);
    partial void OndIdChanged();
    partial void OnstartWorkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartWorkDateChanged();
    partial void OnsalaryMethodChanging(string value);
    partial void OnsalaryMethodChanged();
    partial void OnresumeChanging(string value);
    partial void OnresumeChanged();
    partial void OnhortationCastigateChanging(string value);
    partial void OnhortationCastigateChanged();
    partial void OndimissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OndimissionDateChanged();
    partial void OndimissionReasonChanging(string value);
    partial void OndimissionReasonChanged();
    partial void OnworkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnworkDateChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OnkindChanging(System.Nullable<bool> value);
    partial void OnkindChanged();
    partial void OnptIdChanging(System.Nullable<long> value);
    partial void OnptIdChanged();
    partial void OnmarkChanging(System.Nullable<bool> value);
    partial void OnmarkChanged();
    partial void OnbasicSalaryChanging(System.Nullable<decimal> value);
    partial void OnbasicSalaryChanged();
    partial void OnpIdChanging(System.Nullable<long> value);
    partial void OnpIdChanged();
    #endregion
		
		public PersonnelInfo()
		{
			this._PayOffDetail = new EntitySet<PayOffDetail>(new Action<PayOffDetail>(this.attach_PayOffDetail), new Action<PayOffDetail>(this.detach_PayOffDetail));
			this._PayOffGather = new EntitySet<PayOffGather>(new Action<PayOffGather>(this.attach_PayOffGather), new Action<PayOffGather>(this.detach_PayOffGather));
			this._Position = default(EntityRef<Position>);
			this._ProduceTeam = default(EntityRef<ProduceTeam>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_no", DbType="VarChar(50)")]
		public string no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[Column(Storage="_judgeMarry", DbType="VarChar(50)")]
		public string judgeMarry
		{
			get
			{
				return this._judgeMarry;
			}
			set
			{
				if ((this._judgeMarry != value))
				{
					this.OnjudgeMarryChanging(value);
					this.SendPropertyChanging();
					this._judgeMarry = value;
					this.SendPropertyChanged("judgeMarry");
					this.OnjudgeMarryChanged();
				}
			}
		}
		
		[Column(Storage="_politicalVisage", DbType="VarChar(50)")]
		public string politicalVisage
		{
			get
			{
				return this._politicalVisage;
			}
			set
			{
				if ((this._politicalVisage != value))
				{
					this.OnpoliticalVisageChanging(value);
					this.SendPropertyChanging();
					this._politicalVisage = value;
					this.SendPropertyChanged("politicalVisage");
					this.OnpoliticalVisageChanged();
				}
			}
		}
		
		[Column(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_tiptopDegree", DbType="VarChar(50)")]
		public string tiptopDegree
		{
			get
			{
				return this._tiptopDegree;
			}
			set
			{
				if ((this._tiptopDegree != value))
				{
					this.OntiptopDegreeChanging(value);
					this.SendPropertyChanging();
					this._tiptopDegree = value;
					this.SendPropertyChanged("tiptopDegree");
					this.OntiptopDegreeChanged();
				}
			}
		}
		
		[Column(Storage="_specialty", DbType="VarChar(50)")]
		public string specialty
		{
			get
			{
				return this._specialty;
			}
			set
			{
				if ((this._specialty != value))
				{
					this.OnspecialtyChanging(value);
					this.SendPropertyChanging();
					this._specialty = value;
					this.SendPropertyChanged("specialty");
					this.OnspecialtyChanged();
				}
			}
		}
		
		[Column(Storage="_competencyCertificate", DbType="VarChar(50)")]
		public string competencyCertificate
		{
			get
			{
				return this._competencyCertificate;
			}
			set
			{
				if ((this._competencyCertificate != value))
				{
					this.OncompetencyCertificateChanging(value);
					this.SendPropertyChanging();
					this._competencyCertificate = value;
					this.SendPropertyChanged("competencyCertificate");
					this.OncompetencyCertificateChanged();
				}
			}
		}
		
		[Column(Storage="_IDCard", DbType="VarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[Column(Storage="_contactMethod", DbType="VarChar(50)")]
		public string contactMethod
		{
			get
			{
				return this._contactMethod;
			}
			set
			{
				if ((this._contactMethod != value))
				{
					this.OncontactMethodChanging(value);
					this.SendPropertyChanging();
					this._contactMethod = value;
					this.SendPropertyChanged("contactMethod");
					this.OncontactMethodChanged();
				}
			}
		}
		
		[Column(Storage="_nationality", DbType="VarChar(50)")]
		public string nationality
		{
			get
			{
				return this._nationality;
			}
			set
			{
				if ((this._nationality != value))
				{
					this.OnnationalityChanging(value);
					this.SendPropertyChanging();
					this._nationality = value;
					this.SendPropertyChanged("nationality");
					this.OnnationalityChanged();
				}
			}
		}
		
		[Column(Storage="_contractNo", DbType="VarChar(50)")]
		public string contractNo
		{
			get
			{
				return this._contractNo;
			}
			set
			{
				if ((this._contractNo != value))
				{
					this.OncontractNoChanging(value);
					this.SendPropertyChanging();
					this._contractNo = value;
					this.SendPropertyChanged("contractNo");
					this.OncontractNoChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Name="[function]", Storage="_function", DbType="VarChar(50)")]
		public string function
		{
			get
			{
				return this._function;
			}
			set
			{
				if ((this._function != value))
				{
					this.OnfunctionChanging(value);
					this.SendPropertyChanging();
					this._function = value;
					this.SendPropertyChanged("function");
					this.OnfunctionChanged();
				}
			}
		}
		
		[Column(Storage="_functionAssessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> functionAssessDate
		{
			get
			{
				return this._functionAssessDate;
			}
			set
			{
				if ((this._functionAssessDate != value))
				{
					this.OnfunctionAssessDateChanging(value);
					this.SendPropertyChanging();
					this._functionAssessDate = value;
					this.SendPropertyChanged("functionAssessDate");
					this.OnfunctionAssessDateChanged();
				}
			}
		}
		
		[Column(Storage="_nativePlace", DbType="VarChar(50)")]
		public string nativePlace
		{
			get
			{
				return this._nativePlace;
			}
			set
			{
				if ((this._nativePlace != value))
				{
					this.OnnativePlaceChanging(value);
					this.SendPropertyChanging();
					this._nativePlace = value;
					this.SendPropertyChanged("nativePlace");
					this.OnnativePlaceChanged();
				}
			}
		}
		
		[Column(Storage="_dId", DbType="BigInt")]
		public System.Nullable<long> dId
		{
			get
			{
				return this._dId;
			}
			set
			{
				if ((this._dId != value))
				{
					this.OndIdChanging(value);
					this.SendPropertyChanging();
					this._dId = value;
					this.SendPropertyChanged("dId");
					this.OndIdChanged();
				}
			}
		}
		
		[Column(Storage="_startWorkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startWorkDate
		{
			get
			{
				return this._startWorkDate;
			}
			set
			{
				if ((this._startWorkDate != value))
				{
					this.OnstartWorkDateChanging(value);
					this.SendPropertyChanging();
					this._startWorkDate = value;
					this.SendPropertyChanged("startWorkDate");
					this.OnstartWorkDateChanged();
				}
			}
		}
		
		[Column(Storage="_salaryMethod", DbType="VarChar(50)")]
		public string salaryMethod
		{
			get
			{
				return this._salaryMethod;
			}
			set
			{
				if ((this._salaryMethod != value))
				{
					this.OnsalaryMethodChanging(value);
					this.SendPropertyChanging();
					this._salaryMethod = value;
					this.SendPropertyChanged("salaryMethod");
					this.OnsalaryMethodChanged();
				}
			}
		}
		
		[Column(Storage="_resume", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string resume
		{
			get
			{
				return this._resume;
			}
			set
			{
				if ((this._resume != value))
				{
					this.OnresumeChanging(value);
					this.SendPropertyChanging();
					this._resume = value;
					this.SendPropertyChanged("resume");
					this.OnresumeChanged();
				}
			}
		}
		
		[Column(Storage="_hortationCastigate", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string hortationCastigate
		{
			get
			{
				return this._hortationCastigate;
			}
			set
			{
				if ((this._hortationCastigate != value))
				{
					this.OnhortationCastigateChanging(value);
					this.SendPropertyChanging();
					this._hortationCastigate = value;
					this.SendPropertyChanged("hortationCastigate");
					this.OnhortationCastigateChanged();
				}
			}
		}
		
		[Column(Storage="_dimissionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dimissionDate
		{
			get
			{
				return this._dimissionDate;
			}
			set
			{
				if ((this._dimissionDate != value))
				{
					this.OndimissionDateChanging(value);
					this.SendPropertyChanging();
					this._dimissionDate = value;
					this.SendPropertyChanged("dimissionDate");
					this.OndimissionDateChanged();
				}
			}
		}
		
		[Column(Storage="_dimissionReason", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string dimissionReason
		{
			get
			{
				return this._dimissionReason;
			}
			set
			{
				if ((this._dimissionReason != value))
				{
					this.OndimissionReasonChanging(value);
					this.SendPropertyChanging();
					this._dimissionReason = value;
					this.SendPropertyChanged("dimissionReason");
					this.OndimissionReasonChanged();
				}
			}
		}
		
		[Column(Storage="_workDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> workDate
		{
			get
			{
				return this._workDate;
			}
			set
			{
				if ((this._workDate != value))
				{
					this.OnworkDateChanging(value);
					this.SendPropertyChanging();
					this._workDate = value;
					this.SendPropertyChanged("workDate");
					this.OnworkDateChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_sex", DbType="VarChar(50)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_kind", DbType="Bit")]
		public System.Nullable<bool> kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[Column(Storage="_ptId", DbType="BigInt")]
		public System.Nullable<long> ptId
		{
			get
			{
				return this._ptId;
			}
			set
			{
				if ((this._ptId != value))
				{
					if (this._ProduceTeam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnptIdChanging(value);
					this.SendPropertyChanging();
					this._ptId = value;
					this.SendPropertyChanged("ptId");
					this.OnptIdChanged();
				}
			}
		}
		
		[Column(Storage="_mark", DbType="Bit")]
		public System.Nullable<bool> mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[Column(Storage="_basicSalary", DbType="Money")]
		public System.Nullable<decimal> basicSalary
		{
			get
			{
				return this._basicSalary;
			}
			set
			{
				if ((this._basicSalary != value))
				{
					this.OnbasicSalaryChanging(value);
					this.SendPropertyChanging();
					this._basicSalary = value;
					this.SendPropertyChanged("basicSalary");
					this.OnbasicSalaryChanged();
				}
			}
		}
		
		[Column(Storage="_pId", DbType="BigInt")]
		public System.Nullable<long> pId
		{
			get
			{
				return this._pId;
			}
			set
			{
				if ((this._pId != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpIdChanging(value);
					this.SendPropertyChanging();
					this._pId = value;
					this.SendPropertyChanged("pId");
					this.OnpIdChanged();
				}
			}
		}
		
		[Association(Name="PersonnelInfo_PayOffDetail", Storage="_PayOffDetail", ThisKey="id", OtherKey="piId")]
		public EntitySet<PayOffDetail> PayOffDetail
		{
			get
			{
				return this._PayOffDetail;
			}
			set
			{
				this._PayOffDetail.Assign(value);
			}
		}
		
		[Association(Name="PersonnelInfo_PayOffGather", Storage="_PayOffGather", ThisKey="id", OtherKey="piId")]
		public EntitySet<PayOffGather> PayOffGather
		{
			get
			{
				return this._PayOffGather;
			}
			set
			{
				this._PayOffGather.Assign(value);
			}
		}
		
		[Association(Name="Position_PersonnelInfo", Storage="_Position", ThisKey="pId", OtherKey="id", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.PersonnelInfo.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.PersonnelInfo.Add(this);
						this._pId = value.id;
					}
					else
					{
						this._pId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		[Association(Name="ProduceTeam_PersonnelInfo", Storage="_ProduceTeam", ThisKey="ptId", OtherKey="id", IsForeignKey=true)]
		public ProduceTeam ProduceTeam
		{
			get
			{
				return this._ProduceTeam.Entity;
			}
			set
			{
				ProduceTeam previousValue = this._ProduceTeam.Entity;
				if (((previousValue != value) 
							|| (this._ProduceTeam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProduceTeam.Entity = null;
						previousValue.PersonnelInfo.Remove(this);
					}
					this._ProduceTeam.Entity = value;
					if ((value != null))
					{
						value.PersonnelInfo.Add(this);
						this._ptId = value.id;
					}
					else
					{
						this._ptId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ProduceTeam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayOffDetail(PayOffDetail entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelInfo = this;
		}
		
		private void detach_PayOffDetail(PayOffDetail entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelInfo = null;
		}
		
		private void attach_PayOffGather(PayOffGather entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelInfo = this;
		}
		
		private void detach_PayOffGather(PayOffGather entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelInfo = null;
		}
	}
	
	[Table(Name="dbo.position")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private EntitySet<PersonnelInfo> _PersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    #endregion
		
		public Position()
		{
			this._PersonnelInfo = new EntitySet<PersonnelInfo>(new Action<PersonnelInfo>(this.attach_PersonnelInfo), new Action<PersonnelInfo>(this.detach_PersonnelInfo));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Association(Name="Position_PersonnelInfo", Storage="_PersonnelInfo", ThisKey="id", OtherKey="pId")]
		public EntitySet<PersonnelInfo> PersonnelInfo
		{
			get
			{
				return this._PersonnelInfo;
			}
			set
			{
				this._PersonnelInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonnelInfo(PersonnelInfo entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_PersonnelInfo(PersonnelInfo entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
	}
	
	[Table(Name="dbo.produceTeam")]
	public partial class ProduceTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.Nullable<long> _did;
		
		private System.Nullable<long> _count;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private System.Nullable<long> _eiId;
		
		private string _remark;
		
		private EntitySet<PersonnelInfo> _PersonnelInfo;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<EquipmentInformation> _EquipmentInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndidChanging(System.Nullable<long> value);
    partial void OndidChanged();
    partial void OncountChanging(System.Nullable<long> value);
    partial void OncountChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OneiIdChanging(System.Nullable<long> value);
    partial void OneiIdChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public ProduceTeam()
		{
			this._PersonnelInfo = new EntitySet<PersonnelInfo>(new Action<PersonnelInfo>(this.attach_PersonnelInfo), new Action<PersonnelInfo>(this.detach_PersonnelInfo));
			this._Department = default(EntityRef<Department>);
			this._EquipmentInformation = default(EntityRef<EquipmentInformation>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_did", DbType="BigInt")]
		public System.Nullable<long> did
		{
			get
			{
				return this._did;
			}
			set
			{
				if ((this._did != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndidChanging(value);
					this.SendPropertyChanging();
					this._did = value;
					this.SendPropertyChanged("did");
					this.OndidChanged();
				}
			}
		}
		
		[Column(Storage="_count", DbType="BigInt")]
		public System.Nullable<long> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_eiId", DbType="BigInt")]
		public System.Nullable<long> eiId
		{
			get
			{
				return this._eiId;
			}
			set
			{
				if ((this._eiId != value))
				{
					if (this._EquipmentInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneiIdChanging(value);
					this.SendPropertyChanging();
					this._eiId = value;
					this.SendPropertyChanged("eiId");
					this.OneiIdChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Association(Name="ProduceTeam_PersonnelInfo", Storage="_PersonnelInfo", ThisKey="id", OtherKey="ptId")]
		public EntitySet<PersonnelInfo> PersonnelInfo
		{
			get
			{
				return this._PersonnelInfo;
			}
			set
			{
				this._PersonnelInfo.Assign(value);
			}
		}
		
		[Association(Name="Department_ProduceTeam", Storage="_Department", ThisKey="did", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.ProduceTeam.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.ProduceTeam.Add(this);
						this._did = value.id;
					}
					else
					{
						this._did = default(Nullable<long>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[Association(Name="equipmentInformation_ProduceTeam", Storage="_EquipmentInformation", ThisKey="eiId", OtherKey="id", IsForeignKey=true)]
		public EquipmentInformation EquipmentInformation
		{
			get
			{
				return this._EquipmentInformation.Entity;
			}
			set
			{
				EquipmentInformation previousValue = this._EquipmentInformation.Entity;
				if (((previousValue != value) 
							|| (this._EquipmentInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquipmentInformation.Entity = null;
						previousValue.ProduceTeam.Remove(this);
					}
					this._EquipmentInformation.Entity = value;
					if ((value != null))
					{
						value.ProduceTeam.Add(this);
						this._eiId = value.id;
					}
					else
					{
						this._eiId = default(Nullable<long>);
					}
					this.SendPropertyChanged("EquipmentInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonnelInfo(PersonnelInfo entity)
		{
			this.SendPropertyChanging();
			entity.ProduceTeam = this;
		}
		
		private void detach_PersonnelInfo(PersonnelInfo entity)
		{
			this.SendPropertyChanging();
			entity.ProduceTeam = null;
		}
	}
	
	[Table(Name="dbo.department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
        public override string ToString()
        {
            return this.name;
        }
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _no;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private string _remark;
		
		private EntitySet<ProduceTeam> _ProduceTeam;
		
		private EntitySet<EquipmentInformation> _EquipmentInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnoChanging(string value);
    partial void OnnoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public Department()
		{
			this._ProduceTeam = new EntitySet<ProduceTeam>(new Action<ProduceTeam>(this.attach_ProduceTeam), new Action<ProduceTeam>(this.detach_ProduceTeam));
			this._EquipmentInformation = new EntitySet<EquipmentInformation>(new Action<EquipmentInformation>(this.attach_EquipmentInformation), new Action<EquipmentInformation>(this.detach_EquipmentInformation));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_no", DbType="VarChar(50)")]
		public string no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Association(Name="Department_ProduceTeam", Storage="_ProduceTeam", ThisKey="id", OtherKey="did")]
		public EntitySet<ProduceTeam> ProduceTeam
		{
			get
			{
				return this._ProduceTeam;
			}
			set
			{
				this._ProduceTeam.Assign(value);
			}
		}
		
		[Association(Name="Department_equipmentInformation", Storage="_EquipmentInformation", ThisKey="id", OtherKey="dId")]
		public EntitySet<EquipmentInformation> EquipmentInformation
		{
			get
			{
				return this._EquipmentInformation;
			}
			set
			{
				this._EquipmentInformation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProduceTeam(ProduceTeam entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_ProduceTeam(ProduceTeam entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_EquipmentInformation(EquipmentInformation entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_EquipmentInformation(EquipmentInformation entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[Table(Name="dbo.payOffGather")]
	public partial class PayOffGather : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _piId;
		
		private System.Nullable<decimal> _realIncome;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private string _name;
		
		private EntitySet<PayOffGather2> _payOffGather2;
		
		private EntityRef<PersonnelInfo> _PersonnelInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpiIdChanging(System.Nullable<long> value);
    partial void OnpiIdChanged();
    partial void OnrealIncomeChanging(System.Nullable<decimal> value);
    partial void OnrealIncomeChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public PayOffGather()
		{
			this._payOffGather2 = new EntitySet<PayOffGather2>(new Action<PayOffGather2>(this.attach_payOffGather2), new Action<PayOffGather2>(this.detach_payOffGather2));
			this._PersonnelInfo = default(EntityRef<PersonnelInfo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_piId", DbType="BigInt")]
		public System.Nullable<long> piId
		{
			get
			{
				return this._piId;
			}
			set
			{
				if ((this._piId != value))
				{
					if (this._PersonnelInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpiIdChanging(value);
					this.SendPropertyChanging();
					this._piId = value;
					this.SendPropertyChanged("piId");
					this.OnpiIdChanged();
				}
			}
		}
		
		[Column(Storage="_realIncome", DbType="Money")]
		public System.Nullable<decimal> realIncome
		{
			get
			{
				return this._realIncome;
			}
			set
			{
				if ((this._realIncome != value))
				{
					this.OnrealIncomeChanging(value);
					this.SendPropertyChanging();
					this._realIncome = value;
					this.SendPropertyChanged("realIncome");
					this.OnrealIncomeChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Association(Name="PayOffGather_PayOffGather2", Storage="_payOffGather2", ThisKey="id", OtherKey="pogid")]
		public EntitySet<PayOffGather2> PayOffGather2
		{
			get
			{
				return this._payOffGather2;
			}
			set
			{
				this._payOffGather2.Assign(value);
			}
		}
		
		[Association(Name="PersonnelInfo_PayOffGather", Storage="_PersonnelInfo", ThisKey="piId", OtherKey="id", IsForeignKey=true)]
		public PersonnelInfo PersonnelInfo
		{
			get
			{
				return this._PersonnelInfo.Entity;
			}
			set
			{
				PersonnelInfo previousValue = this._PersonnelInfo.Entity;
				if (((previousValue != value) 
							|| (this._PersonnelInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonnelInfo.Entity = null;
						previousValue.PayOffGather.Remove(this);
					}
					this._PersonnelInfo.Entity = value;
					if ((value != null))
					{
						value.PayOffGather.Add(this);
						this._piId = value.id;
					}
					else
					{
						this._piId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PersonnelInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payOffGather2(PayOffGather2 entity)
		{
			this.SendPropertyChanging();
			entity.PayOffGather = this;
		}
		
		private void detach_payOffGather2(PayOffGather2 entity)
		{
			this.SendPropertyChanging();
			entity.PayOffGather = null;
		}
	}
	
	[Table(Name="dbo.payOffGather2")]
	public partial class PayOffGather2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _pogid;
		
		private string _assessor;
		
		private string _checkupman;
		
		private System.Nullable<System.DateTime> _assessordate;
		
		private System.Nullable<System.DateTime> _checkupdate;
		
		private System.Nullable<System.DateTime> _inputdate;
		
		private string _inputman;
		
		private EntityRef<PayOffGather> _PayOffGather;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpogidChanging(System.Nullable<long> value);
    partial void OnpogidChanged();
    partial void OnassessorChanging(string value);
    partial void OnassessorChanged();
    partial void OncheckupmanChanging(string value);
    partial void OncheckupmanChanged();
    partial void OnassessordateChanging(System.Nullable<System.DateTime> value);
    partial void OnassessordateChanged();
    partial void OncheckupdateChanging(System.Nullable<System.DateTime> value);
    partial void OncheckupdateChanged();
    partial void OninputdateChanging(System.Nullable<System.DateTime> value);
    partial void OninputdateChanged();
    partial void OninputmanChanging(string value);
    partial void OninputmanChanged();
    #endregion
		
		public PayOffGather2()
		{
			this._PayOffGather = default(EntityRef<PayOffGather>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_pogid", DbType="BigInt")]
		public System.Nullable<long> pogid
		{
			get
			{
				return this._pogid;
			}
			set
			{
				if ((this._pogid != value))
				{
					if (this._PayOffGather.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpogidChanging(value);
					this.SendPropertyChanging();
					this._pogid = value;
					this.SendPropertyChanged("pogid");
					this.OnpogidChanged();
				}
			}
		}
		
		[Column(Storage="_assessor", DbType="VarChar(50)")]
		public string assessor
		{
			get
			{
				return this._assessor;
			}
			set
			{
				if ((this._assessor != value))
				{
					this.OnassessorChanging(value);
					this.SendPropertyChanging();
					this._assessor = value;
					this.SendPropertyChanged("assessor");
					this.OnassessorChanged();
				}
			}
		}
		
		[Column(Storage="_checkupman", DbType="VarChar(50)")]
		public string checkupman
		{
			get
			{
				return this._checkupman;
			}
			set
			{
				if ((this._checkupman != value))
				{
					this.OncheckupmanChanging(value);
					this.SendPropertyChanging();
					this._checkupman = value;
					this.SendPropertyChanged("checkupman");
					this.OncheckupmanChanged();
				}
			}
		}
		
		[Column(Storage="_assessordate", DbType="DateTime")]
		public System.Nullable<System.DateTime> assessordate
		{
			get
			{
				return this._assessordate;
			}
			set
			{
				if ((this._assessordate != value))
				{
					this.OnassessordateChanging(value);
					this.SendPropertyChanging();
					this._assessordate = value;
					this.SendPropertyChanged("assessordate");
					this.OnassessordateChanged();
				}
			}
		}
		
		[Column(Storage="_checkupdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> checkupdate
		{
			get
			{
				return this._checkupdate;
			}
			set
			{
				if ((this._checkupdate != value))
				{
					this.OncheckupdateChanging(value);
					this.SendPropertyChanging();
					this._checkupdate = value;
					this.SendPropertyChanged("checkupdate");
					this.OncheckupdateChanged();
				}
			}
		}
		
		[Column(Storage="_inputdate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> inputdate
		{
			get
			{
				return this._inputdate;
			}
			set
			{
				if ((this._inputdate != value))
				{
					this.OninputdateChanging(value);
					this.SendPropertyChanging();
					this._inputdate = value;
					this.SendPropertyChanged("inputdate");
					this.OninputdateChanged();
				}
			}
		}
		
		[Column(Storage="_inputman", DbType="VarChar(50)")]
		public string inputman
		{
			get
			{
				return this._inputman;
			}
			set
			{
				if ((this._inputman != value))
				{
					this.OninputmanChanging(value);
					this.SendPropertyChanging();
					this._inputman = value;
					this.SendPropertyChanged("inputman");
					this.OninputmanChanged();
				}
			}
		}
		
		[Association(Name="PayOffGather_PayOffGather2", Storage="_PayOffGather", ThisKey="pogid", OtherKey="id", IsForeignKey=true)]
		public PayOffGather PayOffGather
		{
			get
			{
				return this._PayOffGather.Entity;
			}
			set
			{
				PayOffGather previousValue = this._PayOffGather.Entity;
				if (((previousValue != value) 
							|| (this._PayOffGather.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayOffGather.Entity = null;
						previousValue.PayOffGather2.Remove(this);
					}
					this._PayOffGather.Entity = value;
					if ((value != null))
					{
						value.PayOffGather2.Add(this);
						this._pogid = value.id;
					}
					else
					{
						this._pogid = default(Nullable<long>);
					}
					this.SendPropertyChanged("PayOffGather");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.equipmentInformation")]
	public partial class EquipmentInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
        public override string ToString()
        {
            return this.no;
        }
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _no;
		
		private System.Nullable<long> _enId;
		
		private System.Nullable<long> _emId;
		
		private System.Nullable<long> _dId;
		
		private System.Nullable<long> _count;
		
		private string _registrationMark;
		
		private string _installationPosition;
		
		private System.Nullable<decimal> _sumPower;
		
		private string _addMethod;
		
		private System.Nullable<decimal> _primaryValue;
		
		private System.Nullable<decimal> _remainsValue;
		
		private System.Nullable<long> _depreciationYear;
		
		private System.Nullable<System.DateTime> _produceDate;
		
		private string _factoryNo;
		
		private string _contactMethod;
		
		private string _factoryAddress;
		
		private string _postCode;
		
		private string _workMan;
		
		private System.Nullable<decimal> _diameter;
		
		private System.Nullable<decimal> _height;
		
		private System.Nullable<System.DateTime> _beginUseTime;
		
		private string _contactMan;
		
		private string _producer;
		
		private System.Nullable<System.DateTime> _inputDate;
		
		private string _inputMan;
		
		private string _remark;
		
		private System.Nullable<long> _dId2;
		
		private string _kind;
		
		private System.Nullable<decimal> _proportionError;
		
		private System.Nullable<decimal> _totalMaterialWeight;
		
		private string _mark;
		
		private System.Nullable<decimal> _proportionError2;
		
		private EntitySet<ProduceTeam> _ProduceTeam;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnoChanging(string value);
    partial void OnnoChanged();
    partial void OnenIdChanging(System.Nullable<long> value);
    partial void OnenIdChanged();
    partial void OnemIdChanging(System.Nullable<long> value);
    partial void OnemIdChanged();
    partial void OndIdChanging(System.Nullable<long> value);
    partial void OndIdChanged();
    partial void OncountChanging(System.Nullable<long> value);
    partial void OncountChanged();
    partial void OnregistrationMarkChanging(string value);
    partial void OnregistrationMarkChanged();
    partial void OninstallationPositionChanging(string value);
    partial void OninstallationPositionChanged();
    partial void OnsumPowerChanging(System.Nullable<decimal> value);
    partial void OnsumPowerChanged();
    partial void OnaddMethodChanging(string value);
    partial void OnaddMethodChanged();
    partial void OnprimaryValueChanging(System.Nullable<decimal> value);
    partial void OnprimaryValueChanged();
    partial void OnremainsValueChanging(System.Nullable<decimal> value);
    partial void OnremainsValueChanged();
    partial void OndepreciationYearChanging(System.Nullable<long> value);
    partial void OndepreciationYearChanged();
    partial void OnproduceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnproduceDateChanged();
    partial void OnfactoryNoChanging(string value);
    partial void OnfactoryNoChanged();
    partial void OncontactMethodChanging(string value);
    partial void OncontactMethodChanged();
    partial void OnfactoryAddressChanging(string value);
    partial void OnfactoryAddressChanged();
    partial void OnpostCodeChanging(string value);
    partial void OnpostCodeChanged();
    partial void OnworkManChanging(string value);
    partial void OnworkManChanged();
    partial void OndiameterChanging(System.Nullable<decimal> value);
    partial void OndiameterChanged();
    partial void OnheightChanging(System.Nullable<decimal> value);
    partial void OnheightChanged();
    partial void OnbeginUseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnbeginUseTimeChanged();
    partial void OncontactManChanging(string value);
    partial void OncontactManChanged();
    partial void OnproducerChanging(string value);
    partial void OnproducerChanged();
    partial void OninputDateChanging(System.Nullable<System.DateTime> value);
    partial void OninputDateChanged();
    partial void OninputManChanging(string value);
    partial void OninputManChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OndId2Changing(System.Nullable<long> value);
    partial void OndId2Changed();
    partial void OnkindChanging(string value);
    partial void OnkindChanged();
    partial void OnproportionErrorChanging(System.Nullable<decimal> value);
    partial void OnproportionErrorChanged();
    partial void OntotalMaterialWeightChanging(System.Nullable<decimal> value);
    partial void OntotalMaterialWeightChanged();
    partial void OnmarkChanging(string value);
    partial void OnmarkChanged();
    partial void OnproportionError2Changing(System.Nullable<decimal> value);
    partial void OnproportionError2Changed();
    #endregion
		
		public EquipmentInformation()
		{
			this._ProduceTeam = new EntitySet<ProduceTeam>(new Action<ProduceTeam>(this.attach_ProduceTeam), new Action<ProduceTeam>(this.detach_ProduceTeam));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_no", DbType="VarChar(200)")]
		public string no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[Column(Storage="_enId", DbType="BigInt")]
		public System.Nullable<long> enId
		{
			get
			{
				return this._enId;
			}
			set
			{
				if ((this._enId != value))
				{
					this.OnenIdChanging(value);
					this.SendPropertyChanging();
					this._enId = value;
					this.SendPropertyChanged("enId");
					this.OnenIdChanged();
				}
			}
		}
		
		[Column(Storage="_emId", DbType="BigInt")]
		public System.Nullable<long> emId
		{
			get
			{
				return this._emId;
			}
			set
			{
				if ((this._emId != value))
				{
					this.OnemIdChanging(value);
					this.SendPropertyChanging();
					this._emId = value;
					this.SendPropertyChanged("emId");
					this.OnemIdChanged();
				}
			}
		}
		
		[Column(Storage="_dId", DbType="BigInt")]
		public System.Nullable<long> dId
		{
			get
			{
				return this._dId;
			}
			set
			{
				if ((this._dId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndIdChanging(value);
					this.SendPropertyChanging();
					this._dId = value;
					this.SendPropertyChanged("dId");
					this.OndIdChanged();
				}
			}
		}
		
		[Column(Storage="_count", DbType="BigInt")]
		public System.Nullable<long> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[Column(Storage="_registrationMark", DbType="VarChar(100)")]
		public string registrationMark
		{
			get
			{
				return this._registrationMark;
			}
			set
			{
				if ((this._registrationMark != value))
				{
					this.OnregistrationMarkChanging(value);
					this.SendPropertyChanging();
					this._registrationMark = value;
					this.SendPropertyChanged("registrationMark");
					this.OnregistrationMarkChanged();
				}
			}
		}
		
		[Column(Storage="_installationPosition", DbType="VarChar(50)")]
		public string installationPosition
		{
			get
			{
				return this._installationPosition;
			}
			set
			{
				if ((this._installationPosition != value))
				{
					this.OninstallationPositionChanging(value);
					this.SendPropertyChanging();
					this._installationPosition = value;
					this.SendPropertyChanged("installationPosition");
					this.OninstallationPositionChanged();
				}
			}
		}
		
		[Column(Storage="_sumPower", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> sumPower
		{
			get
			{
				return this._sumPower;
			}
			set
			{
				if ((this._sumPower != value))
				{
					this.OnsumPowerChanging(value);
					this.SendPropertyChanging();
					this._sumPower = value;
					this.SendPropertyChanged("sumPower");
					this.OnsumPowerChanged();
				}
			}
		}
		
		[Column(Storage="_addMethod", DbType="VarChar(50)")]
		public string addMethod
		{
			get
			{
				return this._addMethod;
			}
			set
			{
				if ((this._addMethod != value))
				{
					this.OnaddMethodChanging(value);
					this.SendPropertyChanging();
					this._addMethod = value;
					this.SendPropertyChanged("addMethod");
					this.OnaddMethodChanged();
				}
			}
		}
		
		[Column(Storage="_primaryValue", DbType="Money")]
		public System.Nullable<decimal> primaryValue
		{
			get
			{
				return this._primaryValue;
			}
			set
			{
				if ((this._primaryValue != value))
				{
					this.OnprimaryValueChanging(value);
					this.SendPropertyChanging();
					this._primaryValue = value;
					this.SendPropertyChanged("primaryValue");
					this.OnprimaryValueChanged();
				}
			}
		}
		
		[Column(Storage="_remainsValue", DbType="Money")]
		public System.Nullable<decimal> remainsValue
		{
			get
			{
				return this._remainsValue;
			}
			set
			{
				if ((this._remainsValue != value))
				{
					this.OnremainsValueChanging(value);
					this.SendPropertyChanging();
					this._remainsValue = value;
					this.SendPropertyChanged("remainsValue");
					this.OnremainsValueChanged();
				}
			}
		}
		
		[Column(Storage="_depreciationYear", DbType="BigInt")]
		public System.Nullable<long> depreciationYear
		{
			get
			{
				return this._depreciationYear;
			}
			set
			{
				if ((this._depreciationYear != value))
				{
					this.OndepreciationYearChanging(value);
					this.SendPropertyChanging();
					this._depreciationYear = value;
					this.SendPropertyChanged("depreciationYear");
					this.OndepreciationYearChanged();
				}
			}
		}
		
		[Column(Storage="_produceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> produceDate
		{
			get
			{
				return this._produceDate;
			}
			set
			{
				if ((this._produceDate != value))
				{
					this.OnproduceDateChanging(value);
					this.SendPropertyChanging();
					this._produceDate = value;
					this.SendPropertyChanged("produceDate");
					this.OnproduceDateChanged();
				}
			}
		}
		
		[Column(Storage="_factoryNo", DbType="VarChar(50)")]
		public string factoryNo
		{
			get
			{
				return this._factoryNo;
			}
			set
			{
				if ((this._factoryNo != value))
				{
					this.OnfactoryNoChanging(value);
					this.SendPropertyChanging();
					this._factoryNo = value;
					this.SendPropertyChanged("factoryNo");
					this.OnfactoryNoChanged();
				}
			}
		}
		
		[Column(Storage="_contactMethod", DbType="VarChar(50)")]
		public string contactMethod
		{
			get
			{
				return this._contactMethod;
			}
			set
			{
				if ((this._contactMethod != value))
				{
					this.OncontactMethodChanging(value);
					this.SendPropertyChanging();
					this._contactMethod = value;
					this.SendPropertyChanged("contactMethod");
					this.OncontactMethodChanged();
				}
			}
		}
		
		[Column(Storage="_factoryAddress", DbType="VarChar(50)")]
		public string factoryAddress
		{
			get
			{
				return this._factoryAddress;
			}
			set
			{
				if ((this._factoryAddress != value))
				{
					this.OnfactoryAddressChanging(value);
					this.SendPropertyChanging();
					this._factoryAddress = value;
					this.SendPropertyChanged("factoryAddress");
					this.OnfactoryAddressChanged();
				}
			}
		}
		
		[Column(Storage="_postCode", DbType="VarChar(50)")]
		public string postCode
		{
			get
			{
				return this._postCode;
			}
			set
			{
				if ((this._postCode != value))
				{
					this.OnpostCodeChanging(value);
					this.SendPropertyChanging();
					this._postCode = value;
					this.SendPropertyChanged("postCode");
					this.OnpostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_workMan", DbType="VarChar(50)")]
		public string workMan
		{
			get
			{
				return this._workMan;
			}
			set
			{
				if ((this._workMan != value))
				{
					this.OnworkManChanging(value);
					this.SendPropertyChanging();
					this._workMan = value;
					this.SendPropertyChanged("workMan");
					this.OnworkManChanged();
				}
			}
		}
		
		[Column(Storage="_diameter", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> diameter
		{
			get
			{
				return this._diameter;
			}
			set
			{
				if ((this._diameter != value))
				{
					this.OndiameterChanging(value);
					this.SendPropertyChanging();
					this._diameter = value;
					this.SendPropertyChanged("diameter");
					this.OndiameterChanged();
				}
			}
		}
		
		[Column(Storage="_height", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[Column(Storage="_beginUseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> beginUseTime
		{
			get
			{
				return this._beginUseTime;
			}
			set
			{
				if ((this._beginUseTime != value))
				{
					this.OnbeginUseTimeChanging(value);
					this.SendPropertyChanging();
					this._beginUseTime = value;
					this.SendPropertyChanged("beginUseTime");
					this.OnbeginUseTimeChanged();
				}
			}
		}
		
		[Column(Storage="_contactMan", DbType="VarChar(50)")]
		public string contactMan
		{
			get
			{
				return this._contactMan;
			}
			set
			{
				if ((this._contactMan != value))
				{
					this.OncontactManChanging(value);
					this.SendPropertyChanging();
					this._contactMan = value;
					this.SendPropertyChanged("contactMan");
					this.OncontactManChanged();
				}
			}
		}
		
		[Column(Storage="_producer", DbType="VarChar(50)")]
		public string producer
		{
			get
			{
				return this._producer;
			}
			set
			{
				if ((this._producer != value))
				{
					this.OnproducerChanging(value);
					this.SendPropertyChanging();
					this._producer = value;
					this.SendPropertyChanged("producer");
					this.OnproducerChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_inputMan", DbType="VarChar(50)")]
		public string inputMan
		{
			get
			{
				return this._inputMan;
			}
			set
			{
				if ((this._inputMan != value))
				{
					this.OninputManChanging(value);
					this.SendPropertyChanging();
					this._inputMan = value;
					this.SendPropertyChanged("inputMan");
					this.OninputManChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="VarChar(500)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Column(Storage="_dId2", DbType="BigInt")]
		public System.Nullable<long> dId2
		{
			get
			{
				return this._dId2;
			}
			set
			{
				if ((this._dId2 != value))
				{
					this.OndId2Changing(value);
					this.SendPropertyChanging();
					this._dId2 = value;
					this.SendPropertyChanged("dId2");
					this.OndId2Changed();
				}
			}
		}
		
		[Column(Storage="_kind", DbType="VarChar(50)")]
		public string kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[Column(Storage="_proportionError", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> proportionError
		{
			get
			{
				return this._proportionError;
			}
			set
			{
				if ((this._proportionError != value))
				{
					this.OnproportionErrorChanging(value);
					this.SendPropertyChanging();
					this._proportionError = value;
					this.SendPropertyChanged("proportionError");
					this.OnproportionErrorChanged();
				}
			}
		}
		
		[Column(Storage="_totalMaterialWeight", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> totalMaterialWeight
		{
			get
			{
				return this._totalMaterialWeight;
			}
			set
			{
				if ((this._totalMaterialWeight != value))
				{
					this.OntotalMaterialWeightChanging(value);
					this.SendPropertyChanging();
					this._totalMaterialWeight = value;
					this.SendPropertyChanged("totalMaterialWeight");
					this.OntotalMaterialWeightChanged();
				}
			}
		}
		
		[Column(Storage="_mark", DbType="VarChar(50)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[Column(Storage="_proportionError2", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> proportionError2
		{
			get
			{
				return this._proportionError2;
			}
			set
			{
				if ((this._proportionError2 != value))
				{
					this.OnproportionError2Changing(value);
					this.SendPropertyChanging();
					this._proportionError2 = value;
					this.SendPropertyChanged("proportionError2");
					this.OnproportionError2Changed();
				}
			}
		}
		
		[Association(Name="equipmentInformation_ProduceTeam", Storage="_ProduceTeam", ThisKey="id", OtherKey="eiId")]
		public EntitySet<ProduceTeam> ProduceTeam
		{
			get
			{
				return this._ProduceTeam;
			}
			set
			{
				this._ProduceTeam.Assign(value);
			}
		}
		
		[Association(Name="Department_equipmentInformation", Storage="_Department", ThisKey="dId", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.EquipmentInformation.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.EquipmentInformation.Add(this);
						this._dId = value.id;
					}
					else
					{
						this._dId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProduceTeam(ProduceTeam entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentInformation = this;
		}
		
		private void detach_ProduceTeam(ProduceTeam entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentInformation = null;
		}
	}
}
#pragma warning restore 1591
