//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Report.stock {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Storage")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Storage : global::System.Data.DataSet {
        
        private materialDataTable tablematerial;
        
        private stockcheckDataTable tablestockcheck;
        
        private stockCheckDetailDataTable tablestockCheckDetail;
        
        private inputDayStatisticsDataTable tableinputDayStatistics;
        
        private supplierDayStatisticsDataTable tablesupplierDayStatistics;
        
        private transportDayStatisticsDataTable tabletransportDayStatistics;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Storage() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Storage(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["material"] != null)) {
                    base.Tables.Add(new materialDataTable(ds.Tables["material"]));
                }
                if ((ds.Tables["stockcheck"] != null)) {
                    base.Tables.Add(new stockcheckDataTable(ds.Tables["stockcheck"]));
                }
                if ((ds.Tables["stockCheckDetail"] != null)) {
                    base.Tables.Add(new stockCheckDetailDataTable(ds.Tables["stockCheckDetail"]));
                }
                if ((ds.Tables["inputDayStatistics"] != null)) {
                    base.Tables.Add(new inputDayStatisticsDataTable(ds.Tables["inputDayStatistics"]));
                }
                if ((ds.Tables["supplierDayStatistics"] != null)) {
                    base.Tables.Add(new supplierDayStatisticsDataTable(ds.Tables["supplierDayStatistics"]));
                }
                if ((ds.Tables["transportDayStatistics"] != null)) {
                    base.Tables.Add(new transportDayStatisticsDataTable(ds.Tables["transportDayStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public materialDataTable material {
            get {
                return this.tablematerial;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockcheckDataTable stockcheck {
            get {
                return this.tablestockcheck;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockCheckDetailDataTable stockCheckDetail {
            get {
                return this.tablestockCheckDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inputDayStatisticsDataTable inputDayStatistics {
            get {
                return this.tableinputDayStatistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public supplierDayStatisticsDataTable supplierDayStatistics {
            get {
                return this.tablesupplierDayStatistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public transportDayStatisticsDataTable transportDayStatistics {
            get {
                return this.tabletransportDayStatistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Storage cln = ((Storage)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["material"] != null)) {
                    base.Tables.Add(new materialDataTable(ds.Tables["material"]));
                }
                if ((ds.Tables["stockcheck"] != null)) {
                    base.Tables.Add(new stockcheckDataTable(ds.Tables["stockcheck"]));
                }
                if ((ds.Tables["stockCheckDetail"] != null)) {
                    base.Tables.Add(new stockCheckDetailDataTable(ds.Tables["stockCheckDetail"]));
                }
                if ((ds.Tables["inputDayStatistics"] != null)) {
                    base.Tables.Add(new inputDayStatisticsDataTable(ds.Tables["inputDayStatistics"]));
                }
                if ((ds.Tables["supplierDayStatistics"] != null)) {
                    base.Tables.Add(new supplierDayStatisticsDataTable(ds.Tables["supplierDayStatistics"]));
                }
                if ((ds.Tables["transportDayStatistics"] != null)) {
                    base.Tables.Add(new transportDayStatisticsDataTable(ds.Tables["transportDayStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablematerial = ((materialDataTable)(base.Tables["material"]));
            if ((initTable == true)) {
                if ((this.tablematerial != null)) {
                    this.tablematerial.InitVars();
                }
            }
            this.tablestockcheck = ((stockcheckDataTable)(base.Tables["stockcheck"]));
            if ((initTable == true)) {
                if ((this.tablestockcheck != null)) {
                    this.tablestockcheck.InitVars();
                }
            }
            this.tablestockCheckDetail = ((stockCheckDetailDataTable)(base.Tables["stockCheckDetail"]));
            if ((initTable == true)) {
                if ((this.tablestockCheckDetail != null)) {
                    this.tablestockCheckDetail.InitVars();
                }
            }
            this.tableinputDayStatistics = ((inputDayStatisticsDataTable)(base.Tables["inputDayStatistics"]));
            if ((initTable == true)) {
                if ((this.tableinputDayStatistics != null)) {
                    this.tableinputDayStatistics.InitVars();
                }
            }
            this.tablesupplierDayStatistics = ((supplierDayStatisticsDataTable)(base.Tables["supplierDayStatistics"]));
            if ((initTable == true)) {
                if ((this.tablesupplierDayStatistics != null)) {
                    this.tablesupplierDayStatistics.InitVars();
                }
            }
            this.tabletransportDayStatistics = ((transportDayStatisticsDataTable)(base.Tables["transportDayStatistics"]));
            if ((initTable == true)) {
                if ((this.tabletransportDayStatistics != null)) {
                    this.tabletransportDayStatistics.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Storage";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Storage.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablematerial = new materialDataTable();
            base.Tables.Add(this.tablematerial);
            this.tablestockcheck = new stockcheckDataTable();
            base.Tables.Add(this.tablestockcheck);
            this.tablestockCheckDetail = new stockCheckDetailDataTable();
            base.Tables.Add(this.tablestockCheckDetail);
            this.tableinputDayStatistics = new inputDayStatisticsDataTable();
            base.Tables.Add(this.tableinputDayStatistics);
            this.tablesupplierDayStatistics = new supplierDayStatisticsDataTable();
            base.Tables.Add(this.tablesupplierDayStatistics);
            this.tabletransportDayStatistics = new transportDayStatisticsDataTable();
            base.Tables.Add(this.tabletransportDayStatistics);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializematerial() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockcheck() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockCheckDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinputDayStatistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesupplierDayStatistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetransportDayStatistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Storage ds = new Storage();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void materialRowChangeEventHandler(object sender, materialRowChangeEvent e);
        
        public delegate void stockcheckRowChangeEventHandler(object sender, stockcheckRowChangeEvent e);
        
        public delegate void stockCheckDetailRowChangeEventHandler(object sender, stockCheckDetailRowChangeEvent e);
        
        public delegate void inputDayStatisticsRowChangeEventHandler(object sender, inputDayStatisticsRowChangeEvent e);
        
        public delegate void supplierDayStatisticsRowChangeEventHandler(object sender, supplierDayStatisticsRowChangeEvent e);
        
        public delegate void transportDayStatisticsRowChangeEventHandler(object sender, transportDayStatisticsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class materialDataTable : global::System.Data.TypedTableBase<materialRow> {
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnjanuary;
            
            private global::System.Data.DataColumn columnfebruary;
            
            private global::System.Data.DataColumn columnmarch;
            
            private global::System.Data.DataColumn columnapril;
            
            private global::System.Data.DataColumn columnmay;
            
            private global::System.Data.DataColumn columnjune;
            
            private global::System.Data.DataColumn columnjuly;
            
            private global::System.Data.DataColumn columnaugust;
            
            private global::System.Data.DataColumn columnseptember;
            
            private global::System.Data.DataColumn columnoctober;
            
            private global::System.Data.DataColumn columnnovember;
            
            private global::System.Data.DataColumn columndecember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialDataTable() {
                this.TableName = "material";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal materialDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected materialDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn januaryColumn {
                get {
                    return this.columnjanuary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn februaryColumn {
                get {
                    return this.columnfebruary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn marchColumn {
                get {
                    return this.columnmarch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aprilColumn {
                get {
                    return this.columnapril;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mayColumn {
                get {
                    return this.columnmay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn juneColumn {
                get {
                    return this.columnjune;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn julyColumn {
                get {
                    return this.columnjuly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn augustColumn {
                get {
                    return this.columnaugust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn septemberColumn {
                get {
                    return this.columnseptember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn octoberColumn {
                get {
                    return this.columnoctober;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn novemberColumn {
                get {
                    return this.columnnovember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn decemberColumn {
                get {
                    return this.columndecember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialRow this[int index] {
                get {
                    return ((materialRow)(this.Rows[index]));
                }
            }
            
            public event materialRowChangeEventHandler materialRowChanging;
            
            public event materialRowChangeEventHandler materialRowChanged;
            
            public event materialRowChangeEventHandler materialRowDeleting;
            
            public event materialRowChangeEventHandler materialRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmaterialRow(materialRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialRow AddmaterialRow(
                        string sort, 
                        string name, 
                        string model, 
                        string quantity, 
                        string january, 
                        string february, 
                        string march, 
                        string april, 
                        string may, 
                        string june, 
                        string july, 
                        string august, 
                        string september, 
                        string october, 
                        string november, 
                        string december) {
                materialRow rowmaterialRow = ((materialRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sort,
                        name,
                        model,
                        quantity,
                        january,
                        february,
                        march,
                        april,
                        may,
                        june,
                        july,
                        august,
                        september,
                        october,
                        november,
                        december};
                rowmaterialRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmaterialRow);
                return rowmaterialRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                materialDataTable cln = ((materialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new materialDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsort = base.Columns["sort"];
                this.columnname = base.Columns["name"];
                this.columnmodel = base.Columns["model"];
                this.columnquantity = base.Columns["quantity"];
                this.columnjanuary = base.Columns["january"];
                this.columnfebruary = base.Columns["february"];
                this.columnmarch = base.Columns["march"];
                this.columnapril = base.Columns["april"];
                this.columnmay = base.Columns["may"];
                this.columnjune = base.Columns["june"];
                this.columnjuly = base.Columns["july"];
                this.columnaugust = base.Columns["august"];
                this.columnseptember = base.Columns["september"];
                this.columnoctober = base.Columns["october"];
                this.columnnovember = base.Columns["november"];
                this.columndecember = base.Columns["december"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnjanuary = new global::System.Data.DataColumn("january", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjanuary);
                this.columnfebruary = new global::System.Data.DataColumn("february", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfebruary);
                this.columnmarch = new global::System.Data.DataColumn("march", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarch);
                this.columnapril = new global::System.Data.DataColumn("april", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapril);
                this.columnmay = new global::System.Data.DataColumn("may", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmay);
                this.columnjune = new global::System.Data.DataColumn("june", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjune);
                this.columnjuly = new global::System.Data.DataColumn("july", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjuly);
                this.columnaugust = new global::System.Data.DataColumn("august", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaugust);
                this.columnseptember = new global::System.Data.DataColumn("september", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseptember);
                this.columnoctober = new global::System.Data.DataColumn("october", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoctober);
                this.columnnovember = new global::System.Data.DataColumn("november", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnovember);
                this.columndecember = new global::System.Data.DataColumn("december", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecember);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialRow NewmaterialRow() {
                return ((materialRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new materialRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(materialRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.materialRowChanged != null)) {
                    this.materialRowChanged(this, new materialRowChangeEvent(((materialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.materialRowChanging != null)) {
                    this.materialRowChanging(this, new materialRowChangeEvent(((materialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.materialRowDeleted != null)) {
                    this.materialRowDeleted(this, new materialRowChangeEvent(((materialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.materialRowDeleting != null)) {
                    this.materialRowDeleting(this, new materialRowChangeEvent(((materialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovematerialRow(materialRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "materialDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockcheckDataTable : global::System.Data.TypedTableBase<stockcheckRow> {
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnsuttle;
            
            private global::System.Data.DataColumn columnunitPrice;
            
            private global::System.Data.DataColumn columnmoney;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckDataTable() {
                this.TableName = "stockcheck";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockcheckDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockcheckDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suttleColumn {
                get {
                    return this.columnsuttle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitPriceColumn {
                get {
                    return this.columnunitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn moneyColumn {
                get {
                    return this.columnmoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckRow this[int index] {
                get {
                    return ((stockcheckRow)(this.Rows[index]));
                }
            }
            
            public event stockcheckRowChangeEventHandler stockcheckRowChanging;
            
            public event stockcheckRowChangeEventHandler stockcheckRowChanged;
            
            public event stockcheckRowChangeEventHandler stockcheckRowDeleting;
            
            public event stockcheckRowChangeEventHandler stockcheckRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockcheckRow(stockcheckRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckRow AddstockcheckRow(string sort, string name, string model, string suttle, decimal unitPrice, decimal money) {
                stockcheckRow rowstockcheckRow = ((stockcheckRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sort,
                        name,
                        model,
                        suttle,
                        unitPrice,
                        money};
                rowstockcheckRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockcheckRow);
                return rowstockcheckRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockcheckDataTable cln = ((stockcheckDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockcheckDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsort = base.Columns["sort"];
                this.columnname = base.Columns["name"];
                this.columnmodel = base.Columns["model"];
                this.columnsuttle = base.Columns["suttle"];
                this.columnunitPrice = base.Columns["unitPrice"];
                this.columnmoney = base.Columns["money"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnsuttle = new global::System.Data.DataColumn("suttle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuttle);
                this.columnunitPrice = new global::System.Data.DataColumn("unitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunitPrice);
                this.columnmoney = new global::System.Data.DataColumn("money", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmoney);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckRow NewstockcheckRow() {
                return ((stockcheckRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockcheckRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockcheckRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockcheckRowChanged != null)) {
                    this.stockcheckRowChanged(this, new stockcheckRowChangeEvent(((stockcheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockcheckRowChanging != null)) {
                    this.stockcheckRowChanging(this, new stockcheckRowChangeEvent(((stockcheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockcheckRowDeleted != null)) {
                    this.stockcheckRowDeleted(this, new stockcheckRowChangeEvent(((stockcheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockcheckRowDeleting != null)) {
                    this.stockcheckRowDeleting(this, new stockcheckRowChangeEvent(((stockcheckRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockcheckRow(stockcheckRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockcheckDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockCheckDetailDataTable : global::System.Data.TypedTableBase<stockCheckDetailRow> {
            
            private global::System.Data.DataColumn columnidx;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columnno;
            
            private global::System.Data.DataColumn columnsupplierName;
            
            private global::System.Data.DataColumn columntransportName;
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnmaterialName;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columngrossWeight;
            
            private global::System.Data.DataColumn columntare;
            
            private global::System.Data.DataColumn columnsuttle;
            
            private global::System.Data.DataColumn columnpersonnel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailDataTable() {
                this.TableName = "stockCheckDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCheckDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockCheckDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idxColumn {
                get {
                    return this.columnidx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noColumn {
                get {
                    return this.columnno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supplierNameColumn {
                get {
                    return this.columnsupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportNameColumn {
                get {
                    return this.columntransportName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn materialNameColumn {
                get {
                    return this.columnmaterialName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grossWeightColumn {
                get {
                    return this.columngrossWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tareColumn {
                get {
                    return this.columntare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suttleColumn {
                get {
                    return this.columnsuttle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn personnelColumn {
                get {
                    return this.columnpersonnel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailRow this[int index] {
                get {
                    return ((stockCheckDetailRow)(this.Rows[index]));
                }
            }
            
            public event stockCheckDetailRowChangeEventHandler stockCheckDetailRowChanging;
            
            public event stockCheckDetailRowChangeEventHandler stockCheckDetailRowChanged;
            
            public event stockCheckDetailRowChangeEventHandler stockCheckDetailRowDeleting;
            
            public event stockCheckDetailRowChangeEventHandler stockCheckDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockCheckDetailRow(stockCheckDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailRow AddstockCheckDetailRow(System.DateTime date, string no, string supplierName, string transportName, string sort, string materialName, string model, decimal grossWeight, decimal tare, decimal suttle, string personnel) {
                stockCheckDetailRow rowstockCheckDetailRow = ((stockCheckDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        date,
                        no,
                        supplierName,
                        transportName,
                        sort,
                        materialName,
                        model,
                        grossWeight,
                        tare,
                        suttle,
                        personnel};
                rowstockCheckDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockCheckDetailRow);
                return rowstockCheckDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockCheckDetailDataTable cln = ((stockCheckDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockCheckDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidx = base.Columns["idx"];
                this.columndate = base.Columns["date"];
                this.columnno = base.Columns["no"];
                this.columnsupplierName = base.Columns["supplierName"];
                this.columntransportName = base.Columns["transportName"];
                this.columnsort = base.Columns["sort"];
                this.columnmaterialName = base.Columns["materialName"];
                this.columnmodel = base.Columns["model"];
                this.columngrossWeight = base.Columns["grossWeight"];
                this.columntare = base.Columns["tare"];
                this.columnsuttle = base.Columns["suttle"];
                this.columnpersonnel = base.Columns["personnel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidx = new global::System.Data.DataColumn("idx", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidx);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columnno = new global::System.Data.DataColumn("no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno);
                this.columnsupplierName = new global::System.Data.DataColumn("supplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupplierName);
                this.columntransportName = new global::System.Data.DataColumn("transportName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportName);
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnmaterialName = new global::System.Data.DataColumn("materialName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaterialName);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columngrossWeight = new global::System.Data.DataColumn("grossWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrossWeight);
                this.columntare = new global::System.Data.DataColumn("tare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntare);
                this.columnsuttle = new global::System.Data.DataColumn("suttle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuttle);
                this.columnpersonnel = new global::System.Data.DataColumn("personnel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersonnel);
                this.columnidx.AutoIncrement = true;
                this.columnidx.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailRow NewstockCheckDetailRow() {
                return ((stockCheckDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockCheckDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockCheckDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockCheckDetailRowChanged != null)) {
                    this.stockCheckDetailRowChanged(this, new stockCheckDetailRowChangeEvent(((stockCheckDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockCheckDetailRowChanging != null)) {
                    this.stockCheckDetailRowChanging(this, new stockCheckDetailRowChangeEvent(((stockCheckDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockCheckDetailRowDeleted != null)) {
                    this.stockCheckDetailRowDeleted(this, new stockCheckDetailRowChangeEvent(((stockCheckDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockCheckDetailRowDeleting != null)) {
                    this.stockCheckDetailRowDeleting(this, new stockCheckDetailRowChangeEvent(((stockCheckDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockCheckDetailRow(stockCheckDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockCheckDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inputDayStatisticsDataTable : global::System.Data.TypedTableBase<inputDayStatisticsRow> {
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnmaterialName;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columninputNum;
            
            private global::System.Data.DataColumn columnmeasure;
            
            private global::System.Data.DataColumn columnnum;
            
            private global::System.Data.DataColumn columnaggregateInputNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsDataTable() {
                this.TableName = "inputDayStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal inputDayStatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected inputDayStatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn materialNameColumn {
                get {
                    return this.columnmaterialName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inputNumColumn {
                get {
                    return this.columninputNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn measureColumn {
                get {
                    return this.columnmeasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aggregateInputNumColumn {
                get {
                    return this.columnaggregateInputNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsRow this[int index] {
                get {
                    return ((inputDayStatisticsRow)(this.Rows[index]));
                }
            }
            
            public event inputDayStatisticsRowChangeEventHandler inputDayStatisticsRowChanging;
            
            public event inputDayStatisticsRowChangeEventHandler inputDayStatisticsRowChanged;
            
            public event inputDayStatisticsRowChangeEventHandler inputDayStatisticsRowDeleting;
            
            public event inputDayStatisticsRowChangeEventHandler inputDayStatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinputDayStatisticsRow(inputDayStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsRow AddinputDayStatisticsRow(string date, string sort, string materialName, string model, decimal inputNum, string measure, decimal num, decimal aggregateInputNum) {
                inputDayStatisticsRow rowinputDayStatisticsRow = ((inputDayStatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        date,
                        sort,
                        materialName,
                        model,
                        inputNum,
                        measure,
                        num,
                        aggregateInputNum};
                rowinputDayStatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinputDayStatisticsRow);
                return rowinputDayStatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                inputDayStatisticsDataTable cln = ((inputDayStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inputDayStatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndate = base.Columns["date"];
                this.columnsort = base.Columns["sort"];
                this.columnmaterialName = base.Columns["materialName"];
                this.columnmodel = base.Columns["model"];
                this.columninputNum = base.Columns["inputNum"];
                this.columnmeasure = base.Columns["measure"];
                this.columnnum = base.Columns["num"];
                this.columnaggregateInputNum = base.Columns["aggregateInputNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndate = new global::System.Data.DataColumn("date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnmaterialName = new global::System.Data.DataColumn("materialName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaterialName);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columninputNum = new global::System.Data.DataColumn("inputNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninputNum);
                this.columnmeasure = new global::System.Data.DataColumn("measure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeasure);
                this.columnnum = new global::System.Data.DataColumn("num", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columnaggregateInputNum = new global::System.Data.DataColumn("aggregateInputNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaggregateInputNum);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsRow NewinputDayStatisticsRow() {
                return ((inputDayStatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inputDayStatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(inputDayStatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inputDayStatisticsRowChanged != null)) {
                    this.inputDayStatisticsRowChanged(this, new inputDayStatisticsRowChangeEvent(((inputDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inputDayStatisticsRowChanging != null)) {
                    this.inputDayStatisticsRowChanging(this, new inputDayStatisticsRowChangeEvent(((inputDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inputDayStatisticsRowDeleted != null)) {
                    this.inputDayStatisticsRowDeleted(this, new inputDayStatisticsRowChangeEvent(((inputDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inputDayStatisticsRowDeleting != null)) {
                    this.inputDayStatisticsRowDeleting(this, new inputDayStatisticsRowChangeEvent(((inputDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinputDayStatisticsRow(inputDayStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inputDayStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class supplierDayStatisticsDataTable : global::System.Data.TypedTableBase<supplierDayStatisticsRow> {
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columnsupplierName;
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnmaterialName;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columninputNum;
            
            private global::System.Data.DataColumn columnnum;
            
            private global::System.Data.DataColumn columnaggregateInputNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsDataTable() {
                this.TableName = "supplierDayStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supplierDayStatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected supplierDayStatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supplierNameColumn {
                get {
                    return this.columnsupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn materialNameColumn {
                get {
                    return this.columnmaterialName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inputNumColumn {
                get {
                    return this.columninputNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aggregateInputNumColumn {
                get {
                    return this.columnaggregateInputNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsRow this[int index] {
                get {
                    return ((supplierDayStatisticsRow)(this.Rows[index]));
                }
            }
            
            public event supplierDayStatisticsRowChangeEventHandler supplierDayStatisticsRowChanging;
            
            public event supplierDayStatisticsRowChangeEventHandler supplierDayStatisticsRowChanged;
            
            public event supplierDayStatisticsRowChangeEventHandler supplierDayStatisticsRowDeleting;
            
            public event supplierDayStatisticsRowChangeEventHandler supplierDayStatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsupplierDayStatisticsRow(supplierDayStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsRow AddsupplierDayStatisticsRow(string date, string supplierName, string sort, string materialName, string model, string inputNum, string num, string aggregateInputNum) {
                supplierDayStatisticsRow rowsupplierDayStatisticsRow = ((supplierDayStatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        date,
                        supplierName,
                        sort,
                        materialName,
                        model,
                        inputNum,
                        num,
                        aggregateInputNum};
                rowsupplierDayStatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsupplierDayStatisticsRow);
                return rowsupplierDayStatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                supplierDayStatisticsDataTable cln = ((supplierDayStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new supplierDayStatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndate = base.Columns["date"];
                this.columnsupplierName = base.Columns["supplierName"];
                this.columnsort = base.Columns["sort"];
                this.columnmaterialName = base.Columns["materialName"];
                this.columnmodel = base.Columns["model"];
                this.columninputNum = base.Columns["inputNum"];
                this.columnnum = base.Columns["num"];
                this.columnaggregateInputNum = base.Columns["aggregateInputNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndate = new global::System.Data.DataColumn("date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columnsupplierName = new global::System.Data.DataColumn("supplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupplierName);
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnmaterialName = new global::System.Data.DataColumn("materialName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaterialName);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columninputNum = new global::System.Data.DataColumn("inputNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninputNum);
                this.columnnum = new global::System.Data.DataColumn("num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columnaggregateInputNum = new global::System.Data.DataColumn("aggregateInputNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaggregateInputNum);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsRow NewsupplierDayStatisticsRow() {
                return ((supplierDayStatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new supplierDayStatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(supplierDayStatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.supplierDayStatisticsRowChanged != null)) {
                    this.supplierDayStatisticsRowChanged(this, new supplierDayStatisticsRowChangeEvent(((supplierDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.supplierDayStatisticsRowChanging != null)) {
                    this.supplierDayStatisticsRowChanging(this, new supplierDayStatisticsRowChangeEvent(((supplierDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.supplierDayStatisticsRowDeleted != null)) {
                    this.supplierDayStatisticsRowDeleted(this, new supplierDayStatisticsRowChangeEvent(((supplierDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.supplierDayStatisticsRowDeleting != null)) {
                    this.supplierDayStatisticsRowDeleting(this, new supplierDayStatisticsRowChangeEvent(((supplierDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesupplierDayStatisticsRow(supplierDayStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "supplierDayStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class transportDayStatisticsDataTable : global::System.Data.TypedTableBase<transportDayStatisticsRow> {
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columntransportName;
            
            private global::System.Data.DataColumn columnstartSite;
            
            private global::System.Data.DataColumn columndistance;
            
            private global::System.Data.DataColumn columnsort;
            
            private global::System.Data.DataColumn columnmaterialName;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnnum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsDataTable() {
                this.TableName = "transportDayStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transportDayStatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected transportDayStatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportNameColumn {
                get {
                    return this.columntransportName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startSiteColumn {
                get {
                    return this.columnstartSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn distanceColumn {
                get {
                    return this.columndistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sortColumn {
                get {
                    return this.columnsort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn materialNameColumn {
                get {
                    return this.columnmaterialName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsRow this[int index] {
                get {
                    return ((transportDayStatisticsRow)(this.Rows[index]));
                }
            }
            
            public event transportDayStatisticsRowChangeEventHandler transportDayStatisticsRowChanging;
            
            public event transportDayStatisticsRowChangeEventHandler transportDayStatisticsRowChanged;
            
            public event transportDayStatisticsRowChangeEventHandler transportDayStatisticsRowDeleting;
            
            public event transportDayStatisticsRowChangeEventHandler transportDayStatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtransportDayStatisticsRow(transportDayStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsRow AddtransportDayStatisticsRow(string date, string transportName, string startSite, string distance, string sort, string materialName, string model, string num) {
                transportDayStatisticsRow rowtransportDayStatisticsRow = ((transportDayStatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        date,
                        transportName,
                        startSite,
                        distance,
                        sort,
                        materialName,
                        model,
                        num};
                rowtransportDayStatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtransportDayStatisticsRow);
                return rowtransportDayStatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                transportDayStatisticsDataTable cln = ((transportDayStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new transportDayStatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndate = base.Columns["date"];
                this.columntransportName = base.Columns["transportName"];
                this.columnstartSite = base.Columns["startSite"];
                this.columndistance = base.Columns["distance"];
                this.columnsort = base.Columns["sort"];
                this.columnmaterialName = base.Columns["materialName"];
                this.columnmodel = base.Columns["model"];
                this.columnnum = base.Columns["num"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndate = new global::System.Data.DataColumn("date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columntransportName = new global::System.Data.DataColumn("transportName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportName);
                this.columnstartSite = new global::System.Data.DataColumn("startSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartSite);
                this.columndistance = new global::System.Data.DataColumn("distance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistance);
                this.columnsort = new global::System.Data.DataColumn("sort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort);
                this.columnmaterialName = new global::System.Data.DataColumn("materialName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaterialName);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnnum = new global::System.Data.DataColumn("num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsRow NewtransportDayStatisticsRow() {
                return ((transportDayStatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new transportDayStatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(transportDayStatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.transportDayStatisticsRowChanged != null)) {
                    this.transportDayStatisticsRowChanged(this, new transportDayStatisticsRowChangeEvent(((transportDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.transportDayStatisticsRowChanging != null)) {
                    this.transportDayStatisticsRowChanging(this, new transportDayStatisticsRowChangeEvent(((transportDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.transportDayStatisticsRowDeleted != null)) {
                    this.transportDayStatisticsRowDeleted(this, new transportDayStatisticsRowChangeEvent(((transportDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.transportDayStatisticsRowDeleting != null)) {
                    this.transportDayStatisticsRowDeleting(this, new transportDayStatisticsRowChangeEvent(((transportDayStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetransportDayStatisticsRow(transportDayStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Storage ds = new Storage();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "transportDayStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class materialRow : global::System.Data.DataRow {
            
            private materialDataTable tablematerial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal materialRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablematerial = ((materialDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tablematerial.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablematerial.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tablematerial.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string quantity {
                get {
                    try {
                        return ((string)(this[this.tablematerial.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“quantity”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string january {
                get {
                    try {
                        return ((string)(this[this.tablematerial.januaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“january”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.januaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string february {
                get {
                    try {
                        return ((string)(this[this.tablematerial.februaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“february”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.februaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string march {
                get {
                    try {
                        return ((string)(this[this.tablematerial.marchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“march”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.marchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string april {
                get {
                    try {
                        return ((string)(this[this.tablematerial.aprilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“april”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.aprilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string may {
                get {
                    try {
                        return ((string)(this[this.tablematerial.mayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“may”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.mayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string june {
                get {
                    try {
                        return ((string)(this[this.tablematerial.juneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“june”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.juneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string july {
                get {
                    try {
                        return ((string)(this[this.tablematerial.julyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“july”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.julyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string august {
                get {
                    try {
                        return ((string)(this[this.tablematerial.augustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“august”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.augustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string september {
                get {
                    try {
                        return ((string)(this[this.tablematerial.septemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“september”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.septemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string october {
                get {
                    try {
                        return ((string)(this[this.tablematerial.octoberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“october”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.octoberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string november {
                get {
                    try {
                        return ((string)(this[this.tablematerial.novemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“november”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.novemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string december {
                get {
                    try {
                        return ((string)(this[this.tablematerial.decemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“material”中列“december”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablematerial.decemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tablematerial.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tablematerial.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablematerial.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablematerial.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tablematerial.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tablematerial.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablematerial.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablematerial.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjanuaryNull() {
                return this.IsNull(this.tablematerial.januaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjanuaryNull() {
                this[this.tablematerial.januaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfebruaryNull() {
                return this.IsNull(this.tablematerial.februaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfebruaryNull() {
                this[this.tablematerial.februaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmarchNull() {
                return this.IsNull(this.tablematerial.marchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmarchNull() {
                this[this.tablematerial.marchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaprilNull() {
                return this.IsNull(this.tablematerial.aprilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaprilNull() {
                this[this.tablematerial.aprilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmayNull() {
                return this.IsNull(this.tablematerial.mayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmayNull() {
                this[this.tablematerial.mayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjuneNull() {
                return this.IsNull(this.tablematerial.juneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjuneNull() {
                this[this.tablematerial.juneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjulyNull() {
                return this.IsNull(this.tablematerial.julyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjulyNull() {
                this[this.tablematerial.julyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaugustNull() {
                return this.IsNull(this.tablematerial.augustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaugustNull() {
                this[this.tablematerial.augustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsseptemberNull() {
                return this.IsNull(this.tablematerial.septemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetseptemberNull() {
                this[this.tablematerial.septemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoctoberNull() {
                return this.IsNull(this.tablematerial.octoberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoctoberNull() {
                this[this.tablematerial.octoberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnovemberNull() {
                return this.IsNull(this.tablematerial.novemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnovemberNull() {
                this[this.tablematerial.novemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdecemberNull() {
                return this.IsNull(this.tablematerial.decemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdecemberNull() {
                this[this.tablematerial.decemberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockcheckRow : global::System.Data.DataRow {
            
            private stockcheckDataTable tablestockcheck;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockcheckRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockcheck = ((stockcheckDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tablestockcheck.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablestockcheck.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tablestockcheck.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string suttle {
                get {
                    try {
                        return ((string)(this[this.tablestockcheck.suttleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“suttle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.suttleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal unitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablestockcheck.unitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“unitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.unitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal money {
                get {
                    try {
                        return ((decimal)(this[this.tablestockcheck.moneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockcheck”中列“money”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockcheck.moneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tablestockcheck.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tablestockcheck.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablestockcheck.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablestockcheck.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tablestockcheck.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tablestockcheck.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuttleNull() {
                return this.IsNull(this.tablestockcheck.suttleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuttleNull() {
                this[this.tablestockcheck.suttleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunitPriceNull() {
                return this.IsNull(this.tablestockcheck.unitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunitPriceNull() {
                this[this.tablestockcheck.unitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmoneyNull() {
                return this.IsNull(this.tablestockcheck.moneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmoneyNull() {
                this[this.tablestockcheck.moneyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockCheckDetailRow : global::System.Data.DataRow {
            
            private stockCheckDetailDataTable tablestockCheckDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCheckDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockCheckDetail = ((stockCheckDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal idx {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCheckDetail.idxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“idx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.idxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablestockCheckDetail.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supplierName {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.supplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“supplierName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.supplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transportName {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.transportNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“transportName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.transportNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string materialName {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.materialNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“materialName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.materialNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal grossWeight {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCheckDetail.grossWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“grossWeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.grossWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tare {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCheckDetail.tareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“tare”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.tareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal suttle {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCheckDetail.suttleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“suttle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.suttleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string personnel {
                get {
                    try {
                        return ((string)(this[this.tablestockCheckDetail.personnelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“stockCheckDetail”中列“personnel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablestockCheckDetail.personnelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidxNull() {
                return this.IsNull(this.tablestockCheckDetail.idxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidxNull() {
                this[this.tablestockCheckDetail.idxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tablestockCheckDetail.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tablestockCheckDetail.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoNull() {
                return this.IsNull(this.tablestockCheckDetail.noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoNull() {
                this[this.tablestockCheckDetail.noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupplierNameNull() {
                return this.IsNull(this.tablestockCheckDetail.supplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupplierNameNull() {
                this[this.tablestockCheckDetail.supplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportNameNull() {
                return this.IsNull(this.tablestockCheckDetail.transportNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportNameNull() {
                this[this.tablestockCheckDetail.transportNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tablestockCheckDetail.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tablestockCheckDetail.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaterialNameNull() {
                return this.IsNull(this.tablestockCheckDetail.materialNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaterialNameNull() {
                this[this.tablestockCheckDetail.materialNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tablestockCheckDetail.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tablestockCheckDetail.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrossWeightNull() {
                return this.IsNull(this.tablestockCheckDetail.grossWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrossWeightNull() {
                this[this.tablestockCheckDetail.grossWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstareNull() {
                return this.IsNull(this.tablestockCheckDetail.tareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettareNull() {
                this[this.tablestockCheckDetail.tareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuttleNull() {
                return this.IsNull(this.tablestockCheckDetail.suttleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuttleNull() {
                this[this.tablestockCheckDetail.suttleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspersonnelNull() {
                return this.IsNull(this.tablestockCheckDetail.personnelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpersonnelNull() {
                this[this.tablestockCheckDetail.personnelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class inputDayStatisticsRow : global::System.Data.DataRow {
            
            private inputDayStatisticsDataTable tableinputDayStatistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal inputDayStatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinputDayStatistics = ((inputDayStatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string date {
                get {
                    try {
                        return ((string)(this[this.tableinputDayStatistics.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tableinputDayStatistics.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string materialName {
                get {
                    try {
                        return ((string)(this[this.tableinputDayStatistics.materialNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“materialName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.materialNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableinputDayStatistics.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal inputNum {
                get {
                    try {
                        return ((decimal)(this[this.tableinputDayStatistics.inputNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“inputNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.inputNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string measure {
                get {
                    try {
                        return ((string)(this[this.tableinputDayStatistics.measureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“measure”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.measureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal num {
                get {
                    try {
                        return ((decimal)(this[this.tableinputDayStatistics.numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal aggregateInputNum {
                get {
                    try {
                        return ((decimal)(this[this.tableinputDayStatistics.aggregateInputNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“inputDayStatistics”中列“aggregateInputNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableinputDayStatistics.aggregateInputNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tableinputDayStatistics.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tableinputDayStatistics.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tableinputDayStatistics.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tableinputDayStatistics.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaterialNameNull() {
                return this.IsNull(this.tableinputDayStatistics.materialNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaterialNameNull() {
                this[this.tableinputDayStatistics.materialNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableinputDayStatistics.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableinputDayStatistics.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinputNumNull() {
                return this.IsNull(this.tableinputDayStatistics.inputNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinputNumNull() {
                this[this.tableinputDayStatistics.inputNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmeasureNull() {
                return this.IsNull(this.tableinputDayStatistics.measureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmeasureNull() {
                this[this.tableinputDayStatistics.measureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumNull() {
                return this.IsNull(this.tableinputDayStatistics.numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumNull() {
                this[this.tableinputDayStatistics.numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaggregateInputNumNull() {
                return this.IsNull(this.tableinputDayStatistics.aggregateInputNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaggregateInputNumNull() {
                this[this.tableinputDayStatistics.aggregateInputNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class supplierDayStatisticsRow : global::System.Data.DataRow {
            
            private supplierDayStatisticsDataTable tablesupplierDayStatistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supplierDayStatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesupplierDayStatistics = ((supplierDayStatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string date {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supplierName {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.supplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“supplierName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.supplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string materialName {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.materialNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“materialName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.materialNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inputNum {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.inputNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“inputNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.inputNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string num {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aggregateInputNum {
                get {
                    try {
                        return ((string)(this[this.tablesupplierDayStatistics.aggregateInputNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“supplierDayStatistics”中列“aggregateInputNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesupplierDayStatistics.aggregateInputNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tablesupplierDayStatistics.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tablesupplierDayStatistics.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupplierNameNull() {
                return this.IsNull(this.tablesupplierDayStatistics.supplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupplierNameNull() {
                this[this.tablesupplierDayStatistics.supplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tablesupplierDayStatistics.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tablesupplierDayStatistics.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaterialNameNull() {
                return this.IsNull(this.tablesupplierDayStatistics.materialNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaterialNameNull() {
                this[this.tablesupplierDayStatistics.materialNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tablesupplierDayStatistics.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tablesupplierDayStatistics.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinputNumNull() {
                return this.IsNull(this.tablesupplierDayStatistics.inputNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinputNumNull() {
                this[this.tablesupplierDayStatistics.inputNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumNull() {
                return this.IsNull(this.tablesupplierDayStatistics.numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumNull() {
                this[this.tablesupplierDayStatistics.numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaggregateInputNumNull() {
                return this.IsNull(this.tablesupplierDayStatistics.aggregateInputNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaggregateInputNumNull() {
                this[this.tablesupplierDayStatistics.aggregateInputNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class transportDayStatisticsRow : global::System.Data.DataRow {
            
            private transportDayStatisticsDataTable tabletransportDayStatistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transportDayStatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletransportDayStatistics = ((transportDayStatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string date {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transportName {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.transportNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“transportName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.transportNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string startSite {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.startSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“startSite”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.startSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string distance {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.distanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“distance”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.distanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sort {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.sortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“sort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.sortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string materialName {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.materialNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“materialName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.materialNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string num {
                get {
                    try {
                        return ((string)(this[this.tabletransportDayStatistics.numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“transportDayStatistics”中列“num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletransportDayStatistics.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tabletransportDayStatistics.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tabletransportDayStatistics.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportNameNull() {
                return this.IsNull(this.tabletransportDayStatistics.transportNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportNameNull() {
                this[this.tabletransportDayStatistics.transportNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartSiteNull() {
                return this.IsNull(this.tabletransportDayStatistics.startSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartSiteNull() {
                this[this.tabletransportDayStatistics.startSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdistanceNull() {
                return this.IsNull(this.tabletransportDayStatistics.distanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdistanceNull() {
                this[this.tabletransportDayStatistics.distanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortNull() {
                return this.IsNull(this.tabletransportDayStatistics.sortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortNull() {
                this[this.tabletransportDayStatistics.sortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaterialNameNull() {
                return this.IsNull(this.tabletransportDayStatistics.materialNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaterialNameNull() {
                this[this.tabletransportDayStatistics.materialNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tabletransportDayStatistics.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tabletransportDayStatistics.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumNull() {
                return this.IsNull(this.tabletransportDayStatistics.numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumNull() {
                this[this.tabletransportDayStatistics.numColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class materialRowChangeEvent : global::System.EventArgs {
            
            private materialRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialRowChangeEvent(materialRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public materialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockcheckRowChangeEvent : global::System.EventArgs {
            
            private stockcheckRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckRowChangeEvent(stockcheckRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockcheckRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockCheckDetailRowChangeEvent : global::System.EventArgs {
            
            private stockCheckDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailRowChangeEvent(stockCheckDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCheckDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class inputDayStatisticsRowChangeEvent : global::System.EventArgs {
            
            private inputDayStatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsRowChangeEvent(inputDayStatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public inputDayStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class supplierDayStatisticsRowChangeEvent : global::System.EventArgs {
            
            private supplierDayStatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsRowChangeEvent(supplierDayStatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierDayStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class transportDayStatisticsRowChangeEvent : global::System.EventArgs {
            
            private transportDayStatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsRowChangeEvent(transportDayStatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transportDayStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591